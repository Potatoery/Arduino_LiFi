/*
##############################################
Author : Jeongcheol, Kim
Company : The Catholic University of Korea
Copyright : MIT License
Description : TX Code for arduino VLC Project
Note : Frequency Modulation code
##############################################
*/

#include "digitalWriteFast.h"
#include "motor_control.h"
#include <SPI.h>
#include <SD.h>

//NEED DEBUG?
#define debug 0
#define STABLE 0

//BER Test Mode
#define ber_test 0

//Is it image?
#define send_image 1

//LED OUTPUT DECLARE
#define LED 10

//Frequency Settings
#if STABLE == 0
  #define FREQ00 400
  #define FREQ01 800
  #define FREQ11 1200
  #define FREQ10 1600
  #define FREQ_ABORT 2000
#else
  #define FREQ00 1040
  #define FREQ01 1440
  #define FREQ11 1840
  #define FREQ10 2240
  #define FREQ_ABORT 2640
#endif

//SYNCBYTE before transmission start
//Minimum 1
//Suggesting 2 ( SOT should be included, Buffer should be flushed at RX )
#define SYNCBYTE 2 //bytes

//Duration of certain Frequency
#define DURATION 1 //CYCLE

//inputString Length
//!!!!!!!!!!!!!!!CAUTION!!!!!!!!!!!!!!!!!!
//IT CONSUMES HUGE MEMORY SPACE
#define LEN 550
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

//inputString Setup
const char inputString[LEN] = "A veryyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy long Message";
const char ber_string[LEN] = "The Catholic University of Korea";
const char image[] PROGMEM = 
{ 0xFF, 0xD8, 0xFF, 0xE0, 0x00, 0x10, 0x4A, 0x46, 0x49, 0x46, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 
0x00, 0x01, 0x00, 0x00, 0xFF, 0xDB, 0x00, 0x43, 0x00, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
0x06, 0x06, 0x05, 0x08, 0x08, 0x07, 0x08, 0x08, 0x0B, 0x0A, 0x09, 0x09, 0x0A, 0x0B, 0x11, 0x0C, 
0x0D, 0x0C, 0x0D, 0x0C, 0x11, 0x1A, 0x10, 0x13, 0x10, 0x10, 0x13, 0x10, 0x1A, 0x17, 0x1B, 0x16, 
0x15, 0x16, 0x1B, 0x17, 0x29, 0x20, 0x1C, 0x1C, 0x20, 0x29, 0x2F, 0x27, 0x25, 0x27, 0x2F, 0x39, 
0x33, 0x33, 0x39, 0x47, 0x44, 0x47, 0x5D, 0x5D, 0x7D, 0xFF, 0xC2, 0x00, 0x0B, 0x08, 0x01, 0x68, 
0x01, 0x68, 0x01, 0x01, 0x21, 0x00, 0xFF, 0xC4, 0x00, 0x1D, 0x00, 0x01, 0x00, 0x02, 0x02, 0x03, 
0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x05, 0x02, 0x08, 
0x03, 0x07, 0x09, 0x06, 0x01, 0xFF, 0xDA, 0x00, 0x08, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0xDB, 
0x02, 0xCA, 0x4B, 0x1A, 0x62, 0xCA, 0x4B, 0x1A, 0x62, 0xCA, 0x4B, 0x1A, 0x62, 0xCA, 0x4B, 0x1A, 
0x62, 0xCA, 0x4B, 0x1A, 0x62, 0xCA, 0x4B, 0x1A, 0x60, 0x59, 0x49, 0x63, 0x4C, 0x59, 0x49, 0x63, 
0x4C, 0x59, 0x49, 0x63, 0x4C, 0x59, 0x49, 0x63, 0x4C, 0x59, 0x49, 0x63, 0x4C, 0x59, 0x49, 0x63, 
0x4C, 0x0B, 0x29, 0x2C, 0x69, 0x8B, 0x29, 0x2C, 0x69, 0x8B, 0x29, 0x2C, 0x69, 0x8B, 0x29, 0x2C, 
0x69, 0x8B, 0x29, 0x2C, 0x69, 0x8B, 0x29, 0x2C, 0x69, 0x8B, 0x13, 0x0C, 0xD8, 0xE4, 0x61, 0x9B, 
0x1C, 0x8C, 0x33, 0x63, 0x91, 0x86, 0x6C, 0x72, 0x30, 0xCD, 0x8E, 0x46, 0x19, 0xB1, 0xC8, 0x94, 
0x57, 0x45, 0x72, 0xDB, 0x15, 0xD1, 0x5C, 0xB6, 0xC5, 0x74, 0x57, 0x2D, 0xB1, 0x5D, 0x15, 0xCB, 
0x6C, 0x57, 0x45, 0x72, 0xDB, 0x15, 0xD1, 0x5C, 0xB6, 0xC0, 0xAE, 0x8A, 0xE5, 0xB6, 0x29, 0xFE, 
0x05, 0xC9, 0x6A, 0x40, 0x8A, 0xE4, 0xB5, 0x20, 0x45, 0x72, 0x5A, 0xFD, 0x35, 0xBD, 0x74, 0x57, 
0x2D, 0xB1, 0x5D, 0x15, 0xCB, 0x6C, 0x0A, 0xE8, 0xAE, 0x5B, 0x63, 0x4E, 0xF4, 0xAC, 0x00, 0x01, 
0xF5, 0x7E, 0x97, 0xFD, 0x6C, 0x57, 0x2D, 0xB1, 0x5D, 0x15, 0xCB, 0x6C, 0x52, 0x16, 0x52, 0x58, 
0xD3, 0x1A, 0x73, 0xAA, 0xBE, 0x84, 0x61, 0x5A, 0x4D, 0x90, 0xC2, 0xB4, 0x9B, 0x21, 0x87, 0x44, 
0x6B, 0x27, 0xD3, 0xFA, 0x5B, 0xD8, 0x8C, 0x69, 0x8B, 0x29, 0x2C, 0x69, 0x81, 0x65, 0x25, 0x8D, 
0x31, 0xA7, 0x3A, 0xB5, 0xEC, 0x36, 0x34, 0xC5, 0x94, 0x96, 0x34, 0xC5, 0x94, 0x96, 0x3A, 0x9D, 
0xA3, 0x4F, 0xAB, 0xF4, 0xC7, 0xEF, 0x31, 0xA6, 0x2C, 0xA4, 0xB1, 0xA6, 0x05, 0x94, 0x96, 0x34, 
0xC6, 0x9C, 0xEA, 0xD7, 0xB0, 0xD8, 0xD3, 0x16, 0x52, 0x58, 0xD3, 0x16, 0x52, 0x58, 0xEB, 0x3E, 
0x80, 0x9F, 0x55, 0xE9, 0x8F, 0xDD, 0xD3, 0x16, 0x52, 0x58, 0xD3, 0x16, 0x26, 0x19, 0xB1, 0xC8, 
0xD2, 0xBD, 0x57, 0xF5, 0xF3, 0x1C, 0x8C, 0x33, 0x63, 0x91, 0x86, 0x6C, 0x6B, 0x7C, 0xB5, 0xF8, 
0xF3, 0xEA, 0xBD, 0x27, 0xFB, 0xD3, 0x0C, 0xD8, 0xE4, 0x4A, 0x2B, 0xA2, 0xB9, 0x6D, 0x8D, 0x28, 
0xD4, 0xFF, 0x00, 0x5B, 0x39, 0x6D, 0xB5, 0xBB, 0xA7, 0x23, 0x71, 0x32, 0x98, 0x46, 0xEE, 0xFE, 
0xF3, 0xE5, 0xB6, 0xF8, 0x8D, 0x28, 0xEA, 0xFE, 0x1F, 0x95, 0xD9, 0x3D, 0xFB, 0x2B, 0xA2, 0xB9, 
0x6D, 0x81, 0x5D, 0x15, 0xCB, 0x6C, 0x69, 0x46, 0xA7, 0xFA, 0xD9, 0xCB, 0x6D, 0xAD, 0x1D, 0x2D, 
0xC1, 0xC6, 0x4B, 0x38, 0x3B, 0xD3, 0xBE, 0x39, 0x6D, 0x8A, 0xE8, 0xBE, 0x5B, 0x77, 0x36, 0xFF, 
0x00, 0x15, 0xD1, 0x5C, 0xB6, 0xC0, 0xAE, 0x8A, 0xE5, 0xB6, 0x34, 0xA3, 0x53, 0xFD, 0x6C, 0xE5, 
0xB6, 0x2B, 0xA2, 0xB9, 0x6D, 0x8A, 0xE8, 0xAE, 0x5B, 0x62, 0xBA, 0x2F, 0x96, 0xDD, 0xCD, 0xBF, 
0xC5, 0x74, 0x57, 0x2D, 0xB1, 0x48, 0x59, 0x49, 0x63, 0x4C, 0x69, 0xCE, 0xAD, 0x7B, 0x0D, 0x8D, 
0x36, 0xB0, 0xF4, 0x97, 0x3F, 0x33, 0x08, 0xA7, 0x3F, 0x33, 0x08, 0xBD, 0xB1, 0xB6, 0x76, 0x52, 
0x7C, 0xA1, 0xEE, 0x4D, 0xDF, 0x2C, 0xA4, 0xB1, 0xA6, 0x05, 0x94, 0x96, 0x34, 0xC6, 0x9C, 0xEA, 
0xD7, 0xB0, 0xD8, 0xD3, 0x74, 0x37, 0x55, 0x4A, 0x92, 0xE2, 0x82, 0x4A, 0x92, 0xE2, 0x83, 0xD8, 
0x9B, 0x15, 0x65, 0x27, 0xCA, 0x1E, 0xE4, 0xDD, 0xF2, 0xCA, 0x4B, 0x1A, 0x60, 0x59, 0x49, 0x63, 
0x4C, 0x69, 0xCE, 0xAD, 0x7B, 0x0D, 0x8D, 0x31, 0x65, 0x25, 0x8D, 0x31, 0x65, 0x25, 0x8D, 0x31, 
0x65, 0x27, 0xCA, 0x1E, 0xE4, 0xDD, 0xF2, 0xCA, 0x4B, 0x1A, 0x62, 0xC4, 0xC3, 0x36, 0x39, 0x1A, 
0x57, 0xAA, 0xFE, 0xBE, 0x63, 0x96, 0xA2, 0xEB, 0xF7, 0x2F, 0xE9, 0xC2, 0x72, 0xFE, 0x9C, 0x3D, 
0xCF, 0xBA, 0x98, 0x67, 0xE5, 0x47, 0x71, 0xEF, 0xA1, 0x86, 0x6C, 0x72, 0x25, 0x15, 0xD1, 0x5C, 
0xB6, 0xC6, 0x94, 0x6A, 0x7F, 0xAD, 0x9C, 0xB6, 0xDD, 0x25, 0xD7, 0x10, 0x78, 0x19, 0xD9, 0x10, 
0x78, 0x19, 0xD9, 0x7D, 0xC7, 0x7E, 0x57, 0x45, 0xF2, 0xDB, 0xB9, 0xB7, 0xF8, 0xAE, 0x8A, 0xE5, 
0xB6, 0x05, 0x74, 0x57, 0x2D, 0xB1, 0xA5, 0x1A, 0x9F, 0xEB, 0x67, 0x2D, 0xB1, 0x5D, 0x15, 0xCB, 
0x6C, 0x57, 0x45, 0x72, 0xDB, 0x15, 0xD1, 0x7C, 0xB6, 0xEE, 0x6D, 0xFE, 0x2B, 0xA2, 0xB9, 0x6D, 
0x81, 0x5D, 0x15, 0xCB, 0xD6, 0x5A, 0xE0, 0xEA, 0x6E, 0xBA, 0xD8, 0xEF, 0xD9, 0xE4, 0x3E, 0x37, 
0xEC, 0xF2, 0x1F, 0x1B, 0xF6, 0x79, 0x0F, 0x8F, 0xA0, 0x3E, 0x9F, 0xBA, 0x1D, 0xFB, 0xDC, 0x91, 
0x5C, 0xB6, 0xC5, 0x21, 0x65, 0x25, 0x8E, 0x96, 0xE9, 0xD8, 0x00, 0x00, 0x00, 0x6D, 0x2E, 0xF5, 
0x49, 0x63, 0x4C, 0x0B, 0x29, 0x2C, 0x74, 0xB7, 0x4E, 0xC0, 0x00, 0x00, 0x03, 0x69, 0x77, 0xAA, 
0x4B, 0x1A, 0x60, 0x59, 0x49, 0x63, 0xA5, 0xBA, 0x76, 0x00, 0x00, 0x00, 0x1B, 0x4B, 0xBD, 0x52, 
0x58, 0xD3, 0x16, 0x26, 0x19, 0xB1, 0xD3, 0xFD, 0x33, 0x0D, 0xA8, 0xEF, 0x8C, 0x62, 0xF4, 0x9E, 
0xAC, 0x76, 0xEE, 0xDC, 0x74, 0xEE, 0xA5, 0xF6, 0xBE, 0xE0, 0xF4, 0xFE, 0xAE, 0x7A, 0x03, 0x2A, 
0x2F, 0xC7, 0xE9, 0xA5, 0x20, 0x6D, 0x5E, 0xF0, 0x66, 0xC7, 0x22, 0x51, 0x5D, 0x15, 0xCB, 0xAA, 
0xBA, 0x4E, 0x1B, 0xD5, 0xD9, 0xDA, 0x9B, 0x7D, 0xBB, 0xBE, 0x6A, 0x7D, 0x56, 0xFC, 0xD2, 0x79, 
0x43, 0xBB, 0x3B, 0x4F, 0xAF, 0x9A, 0x39, 0xEB, 0x46, 0x9C, 0x50, 0xEE, 0x56, 0xBD, 0x68, 0xE8, 
0x6D, 0x96, 0xEA, 0xC5, 0x72, 0xDB, 0x02, 0xBA, 0x2B, 0x97, 0x55, 0x74, 0x9C, 0x37, 0xAB, 0xB0, 
0x74, 0xCB, 0xE9, 0x37, 0xC3, 0xCC, 0x3E, 0xCA, 0xDB, 0xEE, 0xC2, 0xF2, 0xC7, 0xD1, 0x4A, 0x7F, 
0x8E, 0xD1, 0xCF, 0x5A, 0x3C, 0xC5, 0xEB, 0x9F, 0x47, 0x29, 0xFC, 0xF9, 0x0D, 0xB2, 0xDD, 0x58, 
0xAE, 0x5B, 0x60, 0x57, 0x45, 0x72, 0xEA, 0xAE, 0x93, 0x86, 0xF5, 0x6C, 0x97, 0xC7, 0x5A, 0x56, 
0x79, 0xCF, 0xD9, 0x9B, 0x73, 0x4B, 0xD3, 0x5B, 0xA3, 0xA8, 0x5F, 0x5F, 0xA3, 0x9E, 0xB4, 0x57, 
0x49, 0x95, 0xE7, 0x07, 0x4D, 0x06, 0xD9, 0x6E, 0xAC, 0x57, 0x2D, 0xB1, 0x48, 0x59, 0x49, 0x63, 
0xA5, 0xBA, 0x76, 0x1B, 0xEB, 0x96, 0x84, 0x3D, 0x31, 0xEB, 0x8E, 0xA2, 0xDC, 0x3D, 0x5A, 0xDB, 
0x1F, 0x89, 0xEA, 0x4E, 0xC7, 0xD0, 0x9F, 0x5E, 0xBC, 0xE1, 0xF8, 0x2F, 0x95, 0xAE, 0x06, 0xD2, 
0xEF, 0x54, 0x96, 0x34, 0xC0, 0xB2, 0x92, 0xC7, 0x4B, 0x74, 0xEC, 0x37, 0xD7, 0xB2, 0x3A, 0x26, 
0x7E, 0xD4, 0x69, 0x2D, 0x46, 0xE1, 0xF9, 0xF5, 0xE9, 0x96, 0xA4, 0x72, 0xF6, 0x3E, 0x84, 0xFA, 
0xF5, 0xE5, 0x5F, 0x5E, 0x80, 0xDA, 0x5D, 0xEA, 0x92, 0xC6, 0x98, 0x16, 0x52, 0x58, 0xE9, 0x6E, 
0x9D, 0x87, 0x7F, 0xF6, 0x33, 0x83, 0xE1, 0xF5, 0xF3, 0xB1, 0xBB, 0x9B, 0x55, 0xB6, 0xF3, 0xA0, 
0x3E, 0xA3, 0xE8, 0xBA, 0x0B, 0x70, 0xB5, 0x47, 0xE6, 0xC0, 0x6D, 0x2E, 0xF5, 0x49, 0x63, 0x4C, 
0x58, 0x98, 0x66, 0xC7, 0x4F, 0xF4, 0xCC, 0x00, 0x00, 0x00, 0x36, 0xAF, 0x78, 0x33, 0x63, 0x91, 
0x28, 0xAE, 0x8A, 0xE5, 0xD5, 0x5D, 0x27, 0x00, 0x00, 0x00, 0x0D, 0xB2, 0xDD, 0x58, 0xAE, 0x5B, 
0x60, 0x57, 0x45, 0x72, 0xEA, 0xAE, 0x93, 0x80, 0x00, 0x00, 0x06, 0xD9, 0x6E, 0xAC, 0x57, 0x2D, 
0xB0, 0x2B, 0xA2, 0xB9, 0x7E, 0x63, 0xA5, 0x9A, 0xFD, 0xD3, 0x3B, 0xAB, 0x95, 0x81, 0x0F, 0x85, 
0x95, 0x81, 0x0F, 0x85, 0x95, 0x81, 0x0F, 0x87, 0x50, 0x3E, 0xE7, 0x66, 0x1D, 0xB7, 0xF7, 0x51, 
0x5C, 0xB6, 0xC5, 0x21, 0x65, 0x25, 0x8D, 0x31, 0xA7, 0x3A, 0xB5, 0xEC, 0x36, 0x34, 0xC5, 0x94, 
0x96, 0x34, 0xC5, 0x94, 0x96, 0x34, 0xC5, 0x94, 0x9F, 0x28, 0x7B, 0x93, 0x77, 0xCB, 0x29, 0x2C, 
0x69, 0x81, 0x65, 0x25, 0x8D, 0x31, 0xA7, 0x3A, 0xB5, 0xEC, 0x36, 0x34, 0xC5, 0x94, 0x96, 0x34, 
0xC5, 0x94, 0x96, 0x34, 0xC5, 0x94, 0x9F, 0x28, 0x7B, 0x93, 0x77, 0xCB, 0x29, 0x2C, 0x69, 0x81, 
0x65, 0x25, 0x8D, 0x31, 0xA7, 0x3A, 0xAF, 0xE9, 0x84, 0x4A, 0xA2, 0x75, 0x92, 0x25, 0x51, 0x3A, 
0xC9, 0x12, 0xA8, 0x9D, 0x65, 0xE7, 0x6F, 0x78, 0xEE, 0xF9, 0x65, 0x25, 0x8D, 0x31, 0x62, 0x61, 
0x9B, 0x1C, 0x8D, 0x37, 0xD3, 0x90, 0x00, 0x00, 0x36, 0x9B, 0x7A, 0x0C, 0x33, 0x63, 0x91, 0x28, 
0xAE, 0x8A, 0xE5, 0xB6, 0x3E, 0x7B, 0xAA, 0xD9, 0xDB, 0x15, 0xF1, 0x99, 0xDB, 0x15, 0xF1, 0x99, 
0xDB, 0x15, 0xF1, 0x9D, 0x8F, 0xF5, 0xC5, 0x74, 0x57, 0x2D, 0xB0, 0x2B, 0xA2, 0xB9, 0x6D, 0x8A, 
0xE8, 0xAE, 0x5B, 0x62, 0xBA, 0x2B, 0x96, 0xD8, 0xAE, 0x8A, 0xE5, 0xB6, 0x2B, 0xA2, 0xB9, 0x6D, 
0x8A, 0xE8, 0xAE, 0x5B, 0x60, 0x57, 0x45, 0x72, 0xDB, 0x15, 0xD1, 0x5C, 0xB6, 0xC5, 0x74, 0x57, 
0x2D, 0xB1, 0x5D, 0x15, 0xCB, 0x6C, 0x57, 0x45, 0x72, 0xDB, 0x15, 0xD1, 0x5C, 0xB6, 0xC5, 0x21, 
0x65, 0x25, 0x8D, 0x31, 0x65, 0x25, 0x8D, 0x31, 0x65, 0x25, 0x8D, 0x31, 0x65, 0x25, 0x8D, 0x31, 
0x65, 0x25, 0x8D, 0x31, 0x65, 0x25, 0x8D, 0x30, 0x2C, 0xA4, 0xB1, 0xA6, 0x2C, 0xA4, 0xB1, 0xA6, 
0x2C, 0xA4, 0xB1, 0xA6, 0x2C, 0xA4, 0xB1, 0xA6, 0x2C, 0xA4, 0xB1, 0xA6, 0x2C, 0xA4, 0xB1, 0xA6, 
0x05, 0x94, 0x96, 0x34, 0xC5, 0x94, 0x96, 0x34, 0xC5, 0x94, 0x96, 0x34, 0xC5, 0x94, 0x96, 0x34, 
0xC5, 0x94, 0x96, 0x34, 0xC5, 0x94, 0x96, 0x34, 0xC7, 0xFF, 0xC4, 0x00, 0x51, 0x10, 0x00, 0x00, 
0x03, 0x03, 0x05, 0x0A, 0x09, 0x08, 0x08, 0x06, 0x00, 0x05, 0x05, 0x00, 0x00, 0x00, 0x01, 0x02, 
0x03, 0x00, 0x04, 0x05, 0x06, 0x07, 0x11, 0x33, 0x72, 0x08, 0x10, 0x12, 0x18, 0x20, 0x44, 0x94, 
0xA2, 0xB1, 0xE1, 0x13, 0x21, 0x22, 0x31, 0x56, 0x75, 0x82, 0xD2, 0xD3, 0x14, 0x17, 0x36, 0x51, 
0x55, 0x92, 0x93, 0xB3, 0x35, 0x37, 0x41, 0x61, 0x74, 0x91, 0xA4, 0xB2, 0x15, 0x16, 0x34, 0x40, 
0x73, 0xC3, 0x23, 0x30, 0x32, 0x63, 0x71, 0x52, 0x54, 0x62, 0x81, 0x84, 0xFF, 0xDA, 0x00, 0x08, 
0x01, 0x01, 0x00, 0x01, 0x3F, 0x00, 0xBE, 0xE7, 0x57, 0xDA, 0x1D, 0x81, 0x7D, 0x4A, 0xA5, 0x2C, 
0x1B, 0x21, 0xCE, 0xAF, 0xB4, 0x3B, 0x02, 0xFA, 0x95, 0x4A, 0x58, 0x36, 0x43, 0x9D, 0x5F, 0x68, 
0x76, 0x05, 0xF5, 0x2A, 0x94, 0xB0, 0x6C, 0x87, 0x3A, 0xBE, 0xD0, 0xEC, 0x0B, 0xEA, 0x55, 0x29, 
0x60, 0xD9, 0x0E, 0x75, 0x7D, 0xA1, 0xD8, 0x17, 0xD4, 0xAA, 0x52, 0xC1, 0xB2, 0x1C, 0xEA, 0xFB, 
0x43, 0xB0, 0x2F, 0xA9, 0x54, 0xA5, 0x83, 0x65, 0xB9, 0xD5, 0xF6, 0x87, 0x60, 0x5F, 0x52, 0xA9, 
0x4B, 0x06, 0xC8, 0x73, 0xAB, 0xED, 0x0E, 0xC0, 0xBE, 0xA5, 0x52, 0x96, 0x0D, 0x90, 0xE7, 0x57, 
0xDA, 0x1D, 0x81, 0x7D, 0x4A, 0xA5, 0x2C, 0x1B, 0x21, 0xCE, 0xAF, 0xB4, 0x3B, 0x02, 0xFA, 0x95, 
0x4A, 0x58, 0x36, 0x43, 0x9D, 0x5F, 0x68, 0x76, 0x05, 0xF5, 0x2A, 0x94, 0xB0, 0x6C, 0x87, 0x3A, 
0xBE, 0xD0, 0xEC, 0x0B, 0xEA, 0x55, 0x29, 0x60, 0xD9, 0x6E, 0x75, 0x7D, 0xA1, 0xD8, 0x17, 0xD4, 
0xAA, 0x52, 0xC1, 0xB2, 0x1C, 0xEA, 0xFB, 0x43, 0xB0, 0x2F, 0xA9, 0x54, 0xA5, 0x83, 0x64, 0x39, 
0xD5, 0xF6, 0x87, 0x60, 0x5F, 0x52, 0xA9, 0x4B, 0x06, 0xC8, 0x73, 0xAB, 0xED, 0x0E, 0xC0, 0xBE, 
0xA5, 0x52, 0x96, 0x0D, 0x90, 0xE7, 0x57, 0xDA, 0x1D, 0x81, 0x7D, 0x4A, 0xA5, 0x2C, 0x1B, 0x21, 
0xCE, 0xAF, 0xB4, 0x3B, 0x02, 0xFA, 0x95, 0x4A, 0x58, 0x36, 0x40, 0xB8, 0x90, 0x33, 0x8D, 0x5D, 
0xEC, 0x2E, 0x24, 0x0C, 0xE3, 0x57, 0x7B, 0x0B, 0x89, 0x03, 0x38, 0xD5, 0xDE, 0xDC, 0x27, 0x92, 
0xF2, 0x28, 0xC3, 0xA7, 0x95, 0x4F, 0x37, 0x3F, 0x17, 0xDE, 0xC0, 0xFC, 0x40, 0xCD, 0xF5, 0xB7, 
0x30, 0x3F, 0x10, 0x33, 0x7D, 0x6D, 0xCC, 0x0F, 0x78, 0x60, 0x29, 0x82, 0x54, 0x09, 0xF9, 0x38, 
0x54, 0xD3, 0x45, 0x3C, 0x4C, 0x2E, 0x24, 0x0C, 0xE3, 0x57, 0x7B, 0x0B, 0x89, 0x03, 0x38, 0xD5, 
0xDE, 0xC2, 0xE2, 0x40, 0xCE, 0x35, 0x77, 0xB7, 0x09, 0xE4, 0xBC, 0x8A, 0x30, 0xE9, 0xE5, 0x53, 
0xCD, 0xCF, 0xC5, 0xF7, 0xB0, 0x3F, 0x10, 0x33, 0x7D, 0x6D, 0xCC, 0x0F, 0xC4, 0x0C, 0xDF, 0x5B, 
0x73, 0x03, 0xDE, 0x18, 0x0A, 0x60, 0x95, 0x02, 0x7E, 0x4E, 0x15, 0x34, 0xD1, 0x4F, 0x13, 0x0B, 
0x89, 0x03, 0x38, 0xD5, 0xDE, 0xC2, 0xE2, 0x40, 0xCE, 0x35, 0x77, 0xB0, 0xB8, 0x90, 0x33, 0x8D, 
0x5D, 0xED, 0xC2, 0x79, 0x2F, 0x22, 0x8C, 0x3A, 0x79, 0x54, 0xF3, 0x73, 0xF1, 0x7D, 0xEC, 0x0F, 
0xC4, 0x0C, 0xDF, 0x5B, 0x73, 0x03, 0xF1, 0x03, 0x37, 0xD6, 0xDC, 0xC0, 0xF7, 0x86, 0x02, 0x98, 
0x25, 0x40, 0x9F, 0x93, 0x85, 0x4D, 0x34, 0x53, 0xC4, 0xC2, 0xE2, 0x40, 0xCE, 0x35, 0x77, 0xB0, 
0xB8, 0x90, 0x33, 0x8D, 0x5D, 0xEC, 0x2E, 0x24, 0x0C, 0xE3, 0x57, 0x7B, 0x70, 0x9E, 0x4B, 0xC8, 
0xA3, 0x0E, 0x9E, 0x55, 0x3C, 0xDC, 0xFC, 0x5F, 0x7B, 0x03, 0xF1, 0x03, 0x37, 0xD6, 0xDC, 0xC0, 
0xFC, 0x40, 0xCD, 0xF5, 0xB7, 0x30, 0x3D, 0xE1, 0x80, 0xA6, 0x09, 0x50, 0x27, 0xE4, 0xE1, 0x53, 
0x4D, 0x14, 0xF1, 0x30, 0xB8, 0x90, 0x33, 0x8D, 0x5D, 0xEC, 0x2E, 0x24, 0x0C, 0xE3, 0x57, 0x7B, 
0x0B, 0x89, 0x03, 0x38, 0xD5, 0xDE, 0xDC, 0x27, 0x92, 0xF2, 0x28, 0xC3, 0xA7, 0x95, 0x4F, 0x37, 
0x3F, 0x17, 0xDE, 0xC0, 0xFC, 0x40, 0xCD, 0xF5, 0xB7, 0x30, 0x3F, 0x10, 0x33, 0x7D, 0x6D, 0xCC, 
0x0F, 0x78, 0x60, 0x29, 0x82, 0x54, 0x09, 0xF9, 0x38, 0x54, 0xD3, 0x45, 0x3C, 0x4C, 0x2E, 0x24, 
0x0C, 0xE3, 0x57, 0x7B, 0x0B, 0x89, 0x03, 0x38, 0xD5, 0xDE, 0xC2, 0xE2, 0x40, 0xCE, 0x35, 0x77, 
0xB7, 0x09, 0xE4, 0xBC, 0x8A, 0x30, 0xE9, 0xE5, 0x53, 0xCD, 0xCF, 0xC5, 0xF7, 0xB0, 0x3F, 0x10, 
0x33, 0x7D, 0x6D, 0xCC, 0x0F, 0xC4, 0x0C, 0xDF, 0x5B, 0x73, 0x03, 0xDE, 0x18, 0x0A, 0x60, 0x95, 
0x02, 0x7E, 0x4E, 0x15, 0x34, 0xD1, 0x4F, 0x13, 0x0B, 0x89, 0x03, 0x38, 0xD5, 0xDE, 0xC2, 0xE2, 
0x40, 0xCE, 0x35, 0x77, 0xB0, 0xB8, 0x90, 0x33, 0x8D, 0x5D, 0xF9, 0x0F, 0x95, 0xA1, 0x60, 0x2F, 
0xA3, 0x5E, 0x95, 0xB0, 0xDB, 0x90, 0xF9, 0x5A, 0x16, 0x02, 0xFA, 0x35, 0xE9, 0x5B, 0x0D, 0xB9, 
0x0F, 0x95, 0xA1, 0x60, 0x2F, 0xA3, 0x5E, 0x95, 0xB0, 0xDB, 0x90, 0xF9, 0x5A, 0x16, 0x02, 0xFA, 
0x35, 0xE9, 0x5B, 0x0D, 0xB9, 0x0F, 0x95, 0xA1, 0x60, 0x2F, 0xA3, 0x5E, 0x95, 0xB0, 0xDB, 0x90, 
0xF9, 0x5A, 0x16, 0x02, 0xFA, 0x35, 0xE9, 0x5B, 0x0D, 0xB9, 0x6F, 0x95, 0xA1, 0x60, 0x2F, 0xA3, 
0x5E, 0x95, 0xB0, 0xDB, 0x91, 0x15, 0x79, 0x76, 0x72, 0x2A, 0x8F, 0x0F, 0x4B, 0xA6, 0x82, 0x09, 
0x26, 0x06, 0x51, 0x55, 0x4C, 0x04, 0x21, 0x40, 0x3E, 0xD1, 0x13, 0x50, 0xC3, 0x39, 0xD3, 0x76, 
0x03, 0xE9, 0xAC, 0x23, 0x4A, 0x23, 0x79, 0xD0, 0x9B, 0xBE, 0x9A, 0xC2, 0x34, 0xA2, 0x32, 0x53, 
0xA1, 0x37, 0x40, 0xA1, 0x04, 0x65, 0xB4, 0x23, 0x88, 0xC1, 0x9D, 0x11, 0xBC, 0xEB, 0x4D, 0xAF, 
0x4E, 0x61, 0x1A, 0x52, 0x6D, 0xE7, 0x5A, 0x6D, 0x7A, 0x73, 0x08, 0xD2, 0x93, 0x6F, 0x3A, 0xD3, 
0x6B, 0xD3, 0x98, 0x46, 0x94, 0x9B, 0x3E, 0x4E, 0x94, 0xDC, 0xA8, 0xAE, 0x10, 0x4B, 0x68, 0x40, 
0xF2, 0x43, 0x3A, 0x23, 0x79, 0xD0, 0x9B, 0xBE, 0x9A, 0xC2, 0x34, 0xA2, 0x37, 0x9D, 0x09, 0xBB, 
0xE9, 0xAC, 0x23, 0x4A, 0x23, 0x25, 0x3A, 0x13, 0x74, 0x0A, 0x10, 0x46, 0x5B, 0x42, 0x38, 0x8C, 
0x19, 0xD1, 0x1B, 0xCE, 0xB4, 0xDA, 0xF4, 0xE6, 0x11, 0xA5, 0x26, 0xDE, 0x75, 0xA6, 0xD7, 0xA7, 
0x30, 0x8D, 0x29, 0x36, 0xF3, 0xAD, 0x36, 0xBD, 0x39, 0x84, 0x69, 0x49, 0xB3, 0xE4, 0xE9, 0x4D, 
0xCA, 0x8A, 0xE1, 0x04, 0xB6, 0x84, 0x0F, 0x24, 0x33, 0xA2, 0x37, 0x9D, 0x09, 0xBB, 0xE9, 0xAC, 
0x23, 0x4A, 0x23, 0x79, 0xD0, 0x9B, 0xBE, 0x9A, 0xC2, 0x34, 0xA2, 0x32, 0x53, 0xA1, 0x37, 0x40, 
0xA1, 0x04, 0x65, 0xB4, 0x23, 0x88, 0xC1, 0x9D, 0x11, 0xBC, 0xEB, 0x4D, 0xAF, 0x4E, 0x61, 0x1A, 
0x52, 0x6D, 0x05, 0x94, 0x72, 0x7A, 0x51, 0xA0, 0x75, 0xA0, 0xD1, 0xB7, 0x37, 0xF2, 0x26, 0x60, 
0x03, 0x8B, 0xB2, 0xC5, 0x57, 0x02, 0x9B, 0x17, 0x9F, 0x2B, 0x42, 0xC0, 0x5F, 0x46, 0xBD, 0x2B, 
0x61, 0xB7, 0x21, 0xF2, 0xB4, 0x2C, 0x05, 0xF4, 0x6B, 0xD2, 0xB6, 0x1B, 0x72, 0xDF, 0x2B, 0x42, 
0xC0, 0x5F, 0x46, 0xBD, 0x2B, 0x61, 0xB7, 0x22, 0xEB, 0x28, 0xBB, 0xF2, 0x25, 0x92, 0x70, 0x94, 
0x97, 0x12, 0xBA, 0x3C, 0x95, 0x75, 0xD7, 0x20, 0x73, 0x1C, 0xE9, 0x08, 0x01, 0x3F, 0xB3, 0x92, 
0x12, 0xC2, 0x37, 0x22, 0x23, 0x8E, 0xD1, 0x98, 0x33, 0xC8, 0xA6, 0xBA, 0x63, 0x41, 0xC8, 0x35, 
0x6B, 0x26, 0x3C, 0xE9, 0xA8, 0x1F, 0x69, 0x45, 0xA6, 0xEA, 0x71, 0x60, 0x93, 0x8D, 0x03, 0x23, 
0xFC, 0x38, 0xE0, 0x9B, 0xD2, 0x74, 0x11, 0xF1, 0xCC, 0xC3, 0x49, 0xD0, 0x38, 0xED, 0x28, 0xFD, 
0x86, 0x67, 0xCA, 0xD0, 0xB0, 0x17, 0xD1, 0xAF, 0x4A, 0xD8, 0x6D, 0xC8, 0x7C, 0xAD, 0x0B, 0x01, 
0x7D, 0x1A, 0xF4, 0xAD, 0x86, 0xDC, 0xB7, 0x3A, 0xBE, 0xD0, 0xEC, 0x0B, 0xEA, 0x55, 0x29, 0x60, 
0xD9, 0x17, 0x55, 0x7F, 0x55, 0x22, 0x7F, 0xC4, 0xFD, 0xB5, 0x36, 0x87, 0xA2, 0x47, 0x97, 0xF7, 
0x14, 0x14, 0xA7, 0x01, 0x55, 0xD3, 0x21, 0xA8, 0xF5, 0x18, 0xD4, 0x36, 0x2C, 0x73, 0x5D, 0xEA, 
0x8B, 0x69, 0x41, 0xDD, 0x63, 0xDC, 0xC7, 0x36, 0x44, 0x48, 0xE7, 0xA6, 0x29, 0xA4, 0xB6, 0x2D, 
0xB3, 0x71, 0xEA, 0x89, 0xE9, 0x21, 0xDD, 0x6C, 0x5B, 0x66, 0xE3, 0xD5, 0x13, 0xD2, 0x43, 0xBA, 
0xD8, 0xB6, 0xCD, 0xC7, 0xAA, 0x27, 0xA4, 0x87, 0x75, 0x9D, 0xEE, 0x66, 0x9B, 0x45, 0x53, 0x13, 
0x1B, 0xF8, 0xAE, 0x92, 0xD8, 0xB1, 0xCD, 0x77, 0xAA, 0x2D, 0xA5, 0x07, 0x75, 0xB1, 0x63, 0x9A, 
0xEF, 0x54, 0x5B, 0x4A, 0x0E, 0xEB, 0x1E, 0xE6, 0x39, 0xB2, 0x22, 0x47, 0x3D, 0x31, 0x4D, 0x25, 
0xB1, 0x6D, 0x9B, 0x8F, 0x54, 0x4F, 0x49, 0x0E, 0xEB, 0x62, 0xDB, 0x37, 0x1E, 0xA8, 0x9E, 0x92, 
0x1D, 0xD6, 0xC5, 0xB6, 0x6E, 0x3D, 0x51, 0x3D, 0x24, 0x3B, 0xAC, 0xEF, 0x73, 0x34, 0xDA, 0x2A, 
0x98, 0x98, 0xDF, 0xC5, 0x74, 0x96, 0xC5, 0x8E, 0x6B, 0xBD, 0x51, 0x6D, 0x28, 0x3B, 0xAD, 0x8B, 
0x1C, 0xD7, 0x7A, 0xA2, 0xDA, 0x50, 0x77, 0x58, 0xF7, 0x31, 0xCD, 0x91, 0x12, 0x39, 0xE9, 0x8A, 
0x69, 0x2D, 0x3D, 0x93, 0x51, 0x25, 0x24, 0x0C, 0x9E, 0x85, 0xC4, 0x20, 0xC0, 0xF7, 0xC3, 0xAF, 
0x10, 0x04, 0x0F, 0xC3, 0xAB, 0x86, 0x18, 0x02, 0x99, 0x8D, 0x7A, 0x49, 0xCA, 0xC8, 0xCC, 0x8C, 
0x8C, 0xBB, 0x45, 0xE1, 0x0F, 0x22, 0x9A, 0xE9, 0xF1, 0x1C, 0x83, 0x56, 0xB2, 0x63, 0xCE, 0x99, 
0xC3, 0xED, 0x28, 0xB4, 0xDA, 0x4E, 0x0C, 0x12, 0x70, 0x60, 0x40, 0xFC, 0xE0, 0x70, 0x4D, 0xE5, 
0x23, 0x00, 0x3E, 0x3A, 0x1A, 0xB1, 0x03, 0xF7, 0x4D, 0xF6, 0x0D, 0xF5, 0x2A, 0x94, 0xB0, 0x6C, 
0x87, 0x3A, 0xBE, 0xD0, 0xEC, 0x0B, 0xEA, 0x55, 0x29, 0x60, 0xD9, 0x6E, 0x75, 0x7D, 0xA1, 0xD8, 
0x17, 0xD4, 0xAA, 0x52, 0xC1, 0xB2, 0x2E, 0xAA, 0xFE, 0xAA, 0x44, 0xFF, 0x00, 0x89, 0xFB, 0x6A, 
0x6D, 0x06, 0xFA, 0x5E, 0x17, 0xF8, 0xB4, 0x7F, 0x78, 0x5E, 0x52, 0xA9, 0x4B, 0x06, 0xC8, 0x73, 
0xAB, 0xED, 0x0E, 0xC0, 0xBE, 0xA5, 0x52, 0x96, 0x0D, 0x90, 0xE7, 0x57, 0xDA, 0x1D, 0x81, 0x7D, 
0x4A, 0xA5, 0x2C, 0x19, 0xAE, 0xA2, 0xF4, 0x36, 0x01, 0xD7, 0x05, 0xF9, 0x27, 0xBF, 0x23, 0xE5, 
0x7C, 0x6E, 0x43, 0xC7, 0x1D, 0xA3, 0x30, 0x67, 0xAE, 0x0D, 0x74, 0xC6, 0x83, 0x90, 0x78, 0xC8, 
0xB1, 0x39, 0xC5, 0x35, 0x03, 0xED, 0x28, 0xB4, 0xDC, 0xCE, 0x24, 0x0E, 0x71, 0xA0, 0x65, 0x7F, 
0x70, 0x38, 0x24, 0xF2, 0x95, 0x05, 0x7D, 0x74, 0x35, 0x62, 0x07, 0xEE, 0x8F, 0xD8, 0x37, 0x94, 
0xAA, 0x52, 0xC1, 0xB2, 0x1C, 0xEA, 0xFB, 0x43, 0xB0, 0x2F, 0xA9, 0x54, 0xA5, 0x83, 0x65, 0xB9, 
0xD5, 0xF6, 0x87, 0x60, 0x5F, 0x52, 0xA9, 0x4B, 0x06, 0xC8, 0xBA, 0xAB, 0xFA, 0xA9, 0x13, 0xFE, 
0x27, 0xED, 0xA9, 0xB4, 0x1B, 0xE9, 0x78, 0x5F, 0xE2, 0xD1, 0xFD, 0xE1, 0x79, 0x4A, 0xA5, 0x2C, 
0x1B, 0x21, 0xCE, 0xAF, 0xB4, 0x3B, 0x02, 0xFA, 0x95, 0x4A, 0x58, 0x36, 0x43, 0x9D, 0x5F, 0x68, 
0x76, 0x05, 0xF5, 0x2A, 0x94, 0xB0, 0x66, 0xBA, 0x4A, 0x16, 0xAB, 0xFC, 0xDE, 0x15, 0xE9, 0x32, 
0xFF, 0x00, 0x41, 0x12, 0x41, 0x73, 0xD8, 0x30, 0x19, 0x1D, 0xA7, 0xC8, 0x92, 0x12, 0xBE, 0x39, 
0x22, 0x23, 0x6E, 0xD1, 0x88, 0x33, 0xD0, 0xA4, 0xBA, 0x5C, 0x47, 0x20, 0xD5, 0xAC, 0x98, 0xF3, 
0xA6, 0xA0, 0x7D, 0xA5, 0x16, 0x9B, 0xA9, 0xC4, 0x81, 0xCE, 0x34, 0x10, 0xB1, 0x18, 0x71, 0xC1, 
0x27, 0xA4, 0x80, 0x0A, 0xF8, 0xE6, 0x71, 0xA4, 0xE8, 0x1F, 0xBA, 0x2C, 0xA5, 0x52, 0x96, 0x0D, 
0x90, 0xE7, 0x57, 0xDA, 0x1D, 0x81, 0x7D, 0x4A, 0xA5, 0x2C, 0x1B, 0x20, 0x5C, 0x48, 0x19, 0xC6, 
0xAE, 0xF6, 0x17, 0x12, 0x06, 0x71, 0xAB, 0xBD, 0x85, 0xC4, 0x81, 0x9C, 0x6A, 0xEF, 0x6E, 0x13, 
0xC9, 0x79, 0x14, 0x61, 0xD3, 0xCA, 0xA7, 0x9B, 0x9F, 0x8B, 0xEF, 0x60, 0x7E, 0x20, 0x66, 0xFA, 
0xDB, 0x98, 0x1F, 0x88, 0x19, 0xBE, 0xB6, 0xE6, 0x07, 0xBC, 0x30, 0x14, 0xC1, 0x2A, 0x04, 0xFC, 
0x9C, 0x2A, 0x69, 0xA2, 0x9E, 0x26, 0x17, 0x12, 0x06, 0x71, 0xAB, 0xBD, 0x85, 0xC4, 0x81, 0x9C, 
0x6A, 0xEF, 0x61, 0x71, 0x20, 0x67, 0x1A, 0xBB, 0xDA, 0xEA, 0xF2, 0x70, 0x4F, 0xF2, 0x24, 0x9F, 
0xF6, 0x1F, 0x76, 0x91, 0xA1, 0x1C, 0x51, 0x68, 0x5F, 0xE2, 0xD1, 0xFD, 0xE0, 0xC0, 0xFC, 0x40, 
0xCD, 0xF5, 0xB7, 0x30, 0x3D, 0xE1, 0x80, 0xA6, 0x09, 0x50, 0x27, 0xE4, 0xE1, 0x53, 0x4D, 0x14, 
0xF1, 0x30, 0xB8, 0x90, 0x33, 0x8D, 0x5D, 0xEC, 0x2E, 0x24, 0x0C, 0xE3, 0x57, 0x7B, 0x0B, 0x89, 
0x03, 0x38, 0xD5, 0xDE, 0xDC, 0x27, 0x92, 0xF2, 0x28, 0xC3, 0xA7, 0x95, 0x4F, 0x37, 0x3F, 0x17, 
0xDE, 0xC0, 0xFC, 0x40, 0xCD, 0xF5, 0xB7, 0x30, 0x3F, 0x10, 0x33, 0x7D, 0x6D, 0xCC, 0x0F, 0x78, 
0x60, 0x29, 0x82, 0x54, 0x09, 0xF9, 0x38, 0x54, 0xD3, 0x45, 0x3C, 0x4C, 0x2E, 0x24, 0x0C, 0xE3, 
0x57, 0x7B, 0x0B, 0x89, 0x03, 0x38, 0xD5, 0xDE, 0xC2, 0xE2, 0x40, 0xCE, 0x35, 0x77, 0xB7, 0x09, 
0xE4, 0xBC, 0x8A, 0x30, 0xE9, 0xE5, 0x53, 0xCD, 0xCF, 0xC5, 0xF7, 0xB0, 0x3F, 0x10, 0x33, 0x7D, 
0x6D, 0xCC, 0x0F, 0xC4, 0x0C, 0xDF, 0x5B, 0x73, 0x03, 0xDE, 0x18, 0x0A, 0x60, 0x95, 0x02, 0x7E, 
0x4E, 0x15, 0x34, 0xD1, 0x4F, 0x13, 0x46, 0xA4, 0xDB, 0x8C, 0x7A, 0x15, 0x13, 0x84, 0xBF, 0x1F, 
0x0D, 0xD9, 0xED, 0x03, 0xA0, 0xA0, 0x00, 0x7D, 0x87, 0x0A, 0x29, 0x2F, 0xDE, 0x0D, 0x2D, 0xE4, 
0x74, 0x56, 0x42, 0x4A, 0x27, 0xE8, 0x24, 0x49, 0x31, 0xC3, 0x48, 0xC2, 0x28, 0xAD, 0x45, 0x04, 
0x5D, 0x21, 0x1E, 0x4A, 0x84, 0xC8, 0x91, 0xF2, 0xBE, 0x37, 0x22, 0x23, 0x6E, 0xB1, 0x98, 0x3B, 
0xCF, 0x06, 0xBA, 0x5C, 0x47, 0x20, 0xD5, 0xAC, 0x9F, 0xDA, 0x9A, 0x81, 0xF6, 0x94, 0x5A, 0x6F, 
0xE7, 0x26, 0x0D, 0x38, 0xB0, 0x42, 0x3E, 0x38, 0x17, 0x83, 0x78, 0x2D, 0x09, 0xBE, 0x3B, 0x18, 
0xF4, 0x9D, 0x03, 0x9B, 0x69, 0x4D, 0xF6, 0x19, 0x85, 0xC4, 0x81, 0x9C, 0x6A, 0xEF, 0x61, 0x71, 
0x20, 0x67, 0x1A, 0xBB, 0xD8, 0x5C, 0x48, 0x19, 0xC6, 0xAE, 0xF6, 0xE1, 0x3C, 0x97, 0x91, 0x46, 
0x1D, 0x3C, 0xAA, 0x79, 0xB9, 0xF8, 0xBE, 0xF6, 0x07, 0xE2, 0x06, 0x6F, 0xAD, 0xB9, 0x81, 0xF8, 
0x81, 0x9B, 0xEB, 0x6E, 0x60, 0x7B, 0xC3, 0x01, 0x4C, 0x12, 0xA0, 0x4F, 0xC9, 0xC2, 0xA6, 0x9A, 
0x29, 0xE2, 0x61, 0x71, 0x20, 0x67, 0x1A, 0xBB, 0xD8, 0x5C, 0x48, 0x19, 0xC6, 0xAE, 0xF6, 0x17, 
0x12, 0x06, 0x71, 0xAB, 0xBF, 0x21, 0xF2, 0xB4, 0x2C, 0x05, 0xF4, 0x6B, 0xD2, 0xB6, 0x1B, 0x72, 
0x2E, 0xB8, 0xFA, 0x4E, 0x43, 0xFE, 0x0D, 0xEF, 0x69, 0x1A, 0x11, 0xF4, 0xB4, 0x33, 0xF1, 0x48, 
0xFE, 0xE0, 0xBC, 0x8D, 0x7A, 0x56, 0xC3, 0x6D, 0xE9, 0xE9, 0x9E, 0x69, 0x45, 0x36, 0x91, 0xE8, 
0x54, 0x36, 0x17, 0x0C, 0x87, 0xAE, 0x93, 0xCB, 0x80, 0x3C, 0x1C, 0xCF, 0x45, 0x50, 0x4C, 0x06, 
0xC3, 0x31, 0x38, 0xB0, 0x0E, 0x56, 0xC6, 0xC6, 0x5E, 0x7B, 0x0A, 0x09, 0xF0, 0xD7, 0xF1, 0x19, 
0x5B, 0xA9, 0x65, 0xBA, 0xA6, 0xA4, 0x60, 0x50, 0x5F, 0x71, 0x7F, 0x11, 0xB1, 0xA1, 0x96, 0xBE, 
0xC2, 0x83, 0x7B, 0x8B, 0xF8, 0x8D, 0x8D, 0x0C, 0xB5, 0xF6, 0x14, 0x1B, 0xDC, 0x5F, 0xC4, 0x62, 
0xDD, 0x45, 0x2D, 0x8A, 0x6F, 0xA0, 0xA0, 0xBE, 0xE2, 0xDE, 0x23, 0x63, 0x63, 0x2F, 0x3D, 0x85, 
0x04, 0xF8, 0x6B, 0xF8, 0x8D, 0x8D, 0x8C, 0xBC, 0xF6, 0x14, 0x13, 0xE1, 0xAF, 0xE2, 0x36, 0x36, 
0x32, 0xF3, 0xD8, 0x50, 0x4F, 0x86, 0xBF, 0x88, 0xCA, 0xDD, 0x4B, 0x2D, 0xD5, 0x35, 0x23, 0x02, 
0x82, 0xFB, 0x8B, 0xF8, 0x8D, 0x33, 0x13, 0xA3, 0x1A, 0x9C, 0x8F, 0xE6, 0x2F, 0xE2, 0x8E, 0x2E, 
0x48, 0x79, 0x07, 0x93, 0x70, 0x7E, 0x4C, 0x53, 0x85, 0x76, 0x1D, 0x34, 0xE1, 0x98, 0xDE, 0xAB, 
0xC8, 0xD7, 0xA5, 0x6C, 0x36, 0xDE, 0x97, 0x73, 0x79, 0x26, 0xE7, 0x0A, 0x14, 0x0E, 0x11, 0x97, 
0x61, 0xE1, 0x12, 0xA4, 0x5D, 0x9E, 0x93, 0xE2, 0x59, 0x03, 0x0F, 0xA8, 0xDB, 0x4A, 0xD2, 0xB2, 
0xE6, 0x99, 0xC0, 0x81, 0xAC, 0xA1, 0xE1, 0x29, 0x25, 0x1A, 0x73, 0xA7, 0x90, 0x74, 0x0E, 0x09, 
0x2D, 0xDA, 0x4C, 0xEC, 0xB4, 0xD9, 0x4E, 0x22, 0x07, 0x12, 0x29, 0x21, 0xE3, 0x40, 0x6F, 0xC1, 
0x2A, 0x6D, 0x80, 0xDE, 0x6E, 0x27, 0x03, 0xA1, 0x11, 0xBD, 0x01, 0x6E, 0xEB, 0x3D, 0x3B, 0x3C, 
0x39, 0x3C, 0xAE, 0xEA, 0xF4, 0x82, 0x88, 0xBC, 0x20, 0xA1, 0x93, 0x55, 0x25, 0x0A, 0x25, 0x39, 
0x0E, 0x41, 0xA0, 0x4A, 0x60, 0x1E, 0x61, 0x06, 0xB9, 0x61, 0x55, 0x02, 0x5B, 0x46, 0x52, 0xC3, 
0x10, 0x4C, 0xF0, 0xBA, 0x4C, 0x5B, 0x2B, 0x13, 0x21, 0xF2, 0xB4, 0x2C, 0x05, 0xF4, 0x6B, 0xD2, 
0xB6, 0x1B, 0x72, 0xDF, 0x2B, 0x42, 0xC0, 0x5F, 0x46, 0xBD, 0x2B, 0x61, 0xB7, 0x22, 0xEB, 0x8F, 
0xA4, 0xE4, 0x3F, 0xE0, 0xDE, 0xF6, 0x91, 0xA1, 0x1F, 0x4B, 0x43, 0x3F, 0x14, 0x8F, 0xEE, 0x0B, 
0xC8, 0xD7, 0xA5, 0x6C, 0x36, 0xDE, 0x9E, 0xE9, 0x9B, 0x94, 0xF3, 0x8D, 0x1F, 0x84, 0xC4, 0x61, 
0x0F, 0x50, 0xF4, 0x91, 0x76, 0x70, 0x04, 0x14, 0x07, 0x95, 0x0E, 0x43, 0x61, 0xF0, 0x86, 0x3F, 
0xD8, 0x43, 0x36, 0x2A, 0xD3, 0x87, 0xED, 0x48, 0x26, 0x90, 0xAF, 0x86, 0xCA, 0xDC, 0xBF, 0x38, 
0x08, 0x9A, 0x83, 0x44, 0xA0, 0xDF, 0x19, 0x5F, 0x0D, 0xB1, 0x63, 0x97, 0xDE, 0xD2, 0x83, 0x7C, 
0x65, 0x7C, 0x36, 0xC5, 0x8E, 0x5F, 0x7B, 0x4A, 0x0D, 0xF1, 0x95, 0xF0, 0xD8, 0xB7, 0x31, 0x4B, 
0xF3, 0x18, 0x0A, 0x11, 0x28, 0x37, 0xC6, 0x57, 0xC3, 0x6C, 0x55, 0xA7, 0x0F, 0xDA, 0x90, 0x4D, 
0x21, 0x5F, 0x0D, 0xB1, 0x56, 0x9C, 0x3F, 0x6A, 0x41, 0x34, 0x85, 0x7C, 0x36, 0xC5, 0x5A, 0x70, 
0xFD, 0xA9, 0x04, 0xD2, 0x15, 0xF0, 0xD9, 0x5B, 0x97, 0xE7, 0x01, 0x13, 0x50, 0x68, 0x94, 0x1B, 
0xE3, 0x2B, 0xE1, 0xB4, 0xC9, 0xCD, 0x8C, 0x7E, 0x6E, 0x7F, 0x98, 0xFF, 0x00, 0x8B, 0xBC, 0xB9, 
0x2B, 0xE5, 0xFE, 0x4B, 0xC1, 0x79, 0x31, 0xCC, 0x6A, 0x9C, 0x3A, 0x69, 0xC3, 0x29, 0x7D, 0x77, 
0x91, 0xAF, 0x4A, 0xD8, 0x6D, 0xC8, 0x7C, 0xAD, 0x0B, 0x01, 0x7A, 0x71, 0xFE, 0xB0, 0x25, 0xBF, 
0x5D, 0xBF, 0xFC, 0xE3, 0x35, 0xCB, 0x1E, 0x9E, 0x45, 0x7A, 0xA4, 0x7E, 0x7A, 0x79, 0x0F, 0x95, 
0xA1, 0x60, 0x2F, 0xA3, 0x5E, 0x95, 0xB0, 0xDB, 0x96, 0xF9, 0x5A, 0x16, 0x02, 0xFA, 0x35, 0xE9, 
0x5B, 0x0D, 0xB9, 0x17, 0x5C, 0x7D, 0x27, 0x21, 0xFF, 0x00, 0x06, 0xF7, 0xB4, 0x8D, 0x08, 0xFA, 
0x5A, 0x19, 0xF8, 0xA4, 0x7F, 0x70, 0x5E, 0x46, 0xBD, 0x2B, 0x61, 0xB7, 0x21, 0xF2, 0xB4, 0x2C, 
0x05, 0xF4, 0x6B, 0xD2, 0xB6, 0x1B, 0x72, 0x1F, 0x2B, 0x42, 0xC0, 0x5F, 0x46, 0xBD, 0x2B, 0x61, 
0xB7, 0x21, 0xF2, 0xB4, 0x2C, 0x05, 0xE9, 0xC7, 0xFA, 0xC0, 0x96, 0xFD, 0x76, 0xFF, 0x00, 0xF3, 
0x8C, 0xD7, 0x2C, 0x7A, 0x79, 0x15, 0xEA, 0x91, 0xF9, 0xE9, 0xE4, 0x3E, 0x56, 0x85, 0x80, 0xBE, 
0x8D, 0x7A, 0x56, 0xC3, 0x6E, 0x5B, 0x9D, 0x5F, 0x68, 0x76, 0x05, 0xF5, 0x2A, 0x94, 0xB0, 0x6C, 
0x8B, 0xAA, 0xBF, 0xAA, 0x91, 0x3F, 0xE2, 0x7E, 0xDA, 0x9B, 0x41, 0xBE, 0x97, 0x85, 0xFE, 0x2D, 
0x1F, 0xDE, 0x17, 0x94, 0xAA, 0x52, 0xC1, 0xAF, 0x4F, 0x94, 0xE8, 0xCA, 0xE9, 0x0B, 0x28, 0x61, 
0x0E, 0x30, 0x47, 0xA4, 0x12, 0x41, 0x77, 0x00, 0x5D, 0x40, 0x51, 0x12, 0xA9, 0xCB, 0xE1, 0x0C, 
0x56, 0xC6, 0x26, 0x73, 0x7D, 0xA0, 0xE7, 0xA2, 0x11, 0x92, 0xBA, 0x42, 0x74, 0x92, 0x01, 0x29, 
0x22, 0x4E, 0x5A, 0x22, 0x6D, 0x8C, 0xC4, 0xEB, 0xFB, 0x51, 0xCB, 0x43, 0x4D, 0xB1, 0x98, 0x9D, 
0x7F, 0x6A, 0x39, 0x68, 0x69, 0xB0, 0xDD, 0x27, 0x3A, 0x86, 0x20, 0x90, 0x62, 0x4E, 0x5A, 0x1A, 
0x6D, 0x8C, 0x4C, 0xE6, 0xFB, 0x41, 0xCF, 0x44, 0x23, 0x63, 0x13, 0x39, 0xBE, 0xD0, 0x73, 0xD1, 
0x08, 0xD8, 0xC4, 0xCE, 0x6F, 0xB4, 0x1C, 0xF4, 0x42, 0x32, 0x57, 0x48, 0x4E, 0x92, 0x40, 0x25, 
0x24, 0x49, 0xCB, 0x44, 0x4D, 0xB1, 0x98, 0x9D, 0x7F, 0x6A, 0x39, 0x68, 0x69, 0xB6, 0x33, 0x13, 
0xAF, 0xED, 0x47, 0x2D, 0x0D, 0x36, 0x1B, 0xA4, 0xE7, 0x50, 0xC4, 0x12, 0x0C, 0x49, 0xCB, 0x43, 
0x4D, 0xB1, 0x89, 0x9C, 0xDF, 0x68, 0x39, 0xE8, 0x84, 0x69, 0x9B, 0x9D, 0xC9, 0x69, 0x2C, 0xE5, 
0x99, 0x21, 0x31, 0x87, 0xB4, 0x14, 0x74, 0x17, 0x35, 0xD5, 0xA0, 0x88, 0x14, 0x83, 0x84, 0x4B, 
0xCE, 0x75, 0x7D, 0xA1, 0xD8, 0x17, 0xA7, 0x3F, 0xEB, 0x22, 0x5E, 0xF5, 0xF4, 0x43, 0xE7, 0x99, 
0xAE, 0x57, 0xF4, 0xDA, 0x50, 0xF5, 0x12, 0xDF, 0x34, 0x99, 0x0E, 0x75, 0x7D, 0xA1, 0xD8, 0x17, 
0xD4, 0xAA, 0x52, 0xC1, 0xB2, 0xDC, 0xEA, 0xFB, 0x43, 0xB0, 0x2F, 0xA9, 0x54, 0xA5, 0x83, 0x64, 
0x5D, 0x55, 0xFD, 0x54, 0x89, 0xFF, 0x00, 0x13, 0xF6, 0xD4, 0xDA, 0x0D, 0xF4, 0xBC, 0x2F, 0xF1, 
0x68, 0xFE, 0xF0, 0xBC, 0xA5, 0x52, 0x96, 0x0D, 0x7A, 0x75, 0xE6, 0x71, 0xF2, 0x72, 0x23, 0x30, 
0xE8, 0x8A, 0x11, 0xD4, 0x9C, 0x8A, 0xEC, 0xE6, 0x08, 0x09, 0x0E, 0x88, 0xA9, 0x4F, 0x2C, 0x4E, 
0xD8, 0xAB, 0xC5, 0x3A, 0x62, 0xED, 0xA2, 0x9B, 0xBE, 0xC9, 0x5C, 0x9F, 0x14, 0x54, 0x82, 0x60, 
0x96, 0x8E, 0x9A, 0x21, 0xBB, 0xED, 0x8A, 0x24, 0x63, 0xA6, 0xAE, 0x9A, 0x21, 0xFB, 0xCD, 0x8A, 
0x24, 0x63, 0xA6, 0xAE, 0x9A, 0x21, 0xFB, 0xCC, 0x7B, 0x92, 0xE2, 0xC4, 0x25, 0x23, 0x2D, 0x1D, 
0x34, 0x43, 0x77, 0xDB, 0x15, 0x78, 0xA7, 0x4C, 0x5D, 0xB4, 0x53, 0x77, 0xDB, 0x15, 0x78, 0xA7, 
0x4C, 0x5D, 0xB4, 0x53, 0x77, 0xDB, 0x15, 0x78, 0xA7, 0x4C, 0x5D, 0xB4, 0x53, 0x77, 0xD9, 0x2B, 
0x93, 0xE2, 0x8A, 0x90, 0x4C, 0x12, 0xD1, 0xD3, 0x44, 0x37, 0x7D, 0xB1, 0x44, 0x8C, 0x74, 0xD5, 
0xD3, 0x44, 0x3F, 0x79, 0xB1, 0x44, 0x8C, 0x74, 0xD5, 0xD3, 0x44, 0x3F, 0x79, 0x8F, 0x72, 0x5C, 
0x58, 0x84, 0xA4, 0x65, 0xA3, 0xA6, 0x88, 0x6E, 0xFB, 0x62, 0xAF, 0x14, 0xE9, 0x8B, 0xB6, 0x8A, 
0x6E, 0xFB, 0x4D, 0x94, 0xC7, 0x3E, 0xC8, 0x09, 0x4E, 0x58, 0xDA, 0xD2, 0x85, 0x07, 0xB2, 0x03, 
0xB2, 0xA8, 0xF0, 0x44, 0x40, 0xC4, 0xAC, 0xBC, 0xE7, 0x57, 0xDA, 0x1D, 0x81, 0x7A, 0x73, 0xFE, 
0xB2, 0x25, 0xEF, 0x5F, 0x44, 0x3E, 0x79, 0x9A, 0xE5, 0x7F, 0x4D, 0xA5, 0x0F, 0x51, 0x2D, 0xF3, 
0x49, 0x90, 0xE7, 0x57, 0xDA, 0x1D, 0x81, 0x7D, 0x4A, 0xA5, 0x2C, 0x1B, 0x2D, 0xCE, 0xAF, 0xB4, 
0x3B, 0x02, 0xFA, 0x95, 0x4A, 0x58, 0x36, 0x45, 0xD5, 0x5F, 0xD5, 0x48, 0x9F, 0xF1, 0x3F, 0x6D, 
0x4D, 0xA0, 0xDF, 0x4B, 0xC2, 0xFF, 0x00, 0x16, 0x8F, 0xEF, 0x0B, 0xCA, 0x55, 0x29, 0x60, 0xD9, 
0x0E, 0x75, 0x7D, 0xA1, 0xD8, 0x17, 0xD4, 0xAA, 0x52, 0xC1, 0xB2, 0x1C, 0xEA, 0xFB, 0x43, 0xB0, 
0x2F, 0xA9, 0x54, 0xA5, 0x83, 0x64, 0x39, 0xD5, 0xF6, 0x87, 0x60, 0x5E, 0x9C, 0xFF, 0x00, 0xAC, 
0x89, 0x7B, 0xD7, 0xD1, 0x0F, 0x9E, 0x66, 0xB9, 0x5F, 0xD3, 0x69, 0x43, 0xD4, 0x4B, 0x7C, 0xD2, 
0x64, 0x39, 0xD5, 0xF6, 0x87, 0x60, 0x5F, 0x52, 0xA9, 0x4B, 0x06, 0xC8, 0x17, 0x12, 0x06, 0x71, 
0xAB, 0xBD, 0x85, 0xC4, 0x81, 0x9C, 0x6A, 0xEF, 0x61, 0x71, 0x20, 0x67, 0x1A, 0xBB, 0xDB, 0x84, 
0xF2, 0x5E, 0x45, 0x18, 0x74, 0xF2, 0xA9, 0xE6, 0xE7, 0xE2, 0xFB, 0xD8, 0x1F, 0x88, 0x19, 0xBE, 
0xB6, 0xE6, 0x07, 0xE2, 0x06, 0x6F, 0xAD, 0xB9, 0x81, 0xEF, 0x0C, 0x05, 0x30, 0x4A, 0x81, 0x3F, 
0x27, 0x0A, 0x9A, 0x68, 0xA7, 0x89, 0x85, 0xC4, 0x81, 0x9C, 0x6A, 0xEF, 0x61, 0x71, 0x20, 0x67, 
0x1A, 0xBB, 0xD8, 0x5C, 0x48, 0x19, 0xC6, 0xAE, 0xF6, 0xBA, 0xBC, 0x9C, 0x13, 0xFC, 0x89, 0x27, 
0xFD, 0x87, 0xDD, 0xA4, 0x68, 0x47, 0x14, 0x5A, 0x17, 0xF8, 0xB4, 0x7F, 0x78, 0x30, 0x3F, 0x10, 
0x33, 0x7D, 0x6D, 0xCC, 0x0F, 0x78, 0x60, 0x29, 0x82, 0x54, 0x09, 0xF9, 0x38, 0x54, 0xD3, 0x45, 
0x3C, 0x4C, 0x2E, 0x24, 0x0C, 0xE3, 0x57, 0x7B, 0x5D, 0x0D, 0x2E, 0x65, 0x8C, 0x8B, 0x94, 0xF0, 
0x57, 0x28, 0x14, 0x75, 0x57, 0x44, 0x17, 0x86, 0x02, 0xC7, 0x21, 0x08, 0x41, 0xA4, 0xE2, 0xA1, 
0x9B, 0xCF, 0x64, 0xE9, 0x74, 0xBD, 0xE3, 0xE1, 0x23, 0xDC, 0x62, 0x4F, 0x8C, 0xEA, 0x93, 0x88, 
0xB2, 0xC5, 0xE3, 0xE1, 0x23, 0xDC, 0x6F, 0x3E, 0x73, 0xAD, 0xD3, 0x17, 0x8F, 0x82, 0x8F, 0x71, 
0xBC, 0xF9, 0xCE, 0xB7, 0x4C, 0x5E, 0x3E, 0x0A, 0x3D, 0xC6, 0x19, 0xF3, 0x9D, 0x71, 0x0A, 0x06, 
0x59, 0x3C, 0xFC, 0x24, 0x7B, 0x8D, 0xE7, 0xB2, 0x74, 0xBA, 0x5E, 0xF1, 0xF0, 0x91, 0xEE, 0x37, 
0x9E, 0xC9, 0xD2, 0xE9, 0x7B, 0xC7, 0xC2, 0x47, 0xB8, 0xDE, 0x7B, 0x27, 0x4B, 0xA5, 0xEF, 0x1F, 
0x09, 0x1E, 0xE3, 0x12, 0x7C, 0x67, 0x54, 0x9C, 0x45, 0x96, 0x2F, 0x1F, 0x09, 0x1E, 0xE3, 0x79, 
0xF3, 0x9D, 0x6E, 0x98, 0xBC, 0x7C, 0x14, 0x7B, 0x8D, 0xE7, 0xCE, 0x75, 0xBA, 0x62, 0xF1, 0xF0, 
0x51, 0xEE, 0x30, 0xCF, 0x9C, 0xEB, 0x88, 0x50, 0x32, 0xC9, 0xE7, 0xE1, 0x23, 0xDC, 0x6F, 0x3D, 
0x93, 0xA5, 0xD2, 0xF7, 0x8F, 0x84, 0x8F, 0x71, 0xA6, 0x22, 0x71, 0x25, 0xBC, 0xAE, 0x97, 0x84, 
0x85, 0xC6, 0xA5, 0x0A, 0xCF, 0x2E, 0x82, 0xE2, 0xBA, 0xA2, 0x99, 0x88, 0x9D, 0x14, 0x92, 0xC8, 
0x03, 0x0B, 0x89, 0x03, 0x38, 0xD5, 0xDE, 0xDC, 0x27, 0x92, 0xF2, 0x28, 0xC3, 0xA7, 0x95, 0x4F, 
0x37, 0x3F, 0x17, 0xDE, 0xC0, 0xFC, 0x40, 0xCD, 0xF5, 0xB7, 0x34, 0xE5, 0x1B, 0x0E, 0x70, 0xE5, 
0xD1, 0xA8, 0xA2, 0x98, 0xEB, 0xFF, 0x00, 0xCF, 0x33, 0x5C, 0xB4, 0x34, 0x4B, 0x88, 0xD9, 0x7D, 
0x70, 0x63, 0xFC, 0xE4, 0xD8, 0x5C, 0x48, 0x19, 0xC6, 0xAE, 0xF6, 0x17, 0x12, 0x06, 0x71, 0xAB, 
0xBD, 0x85, 0xC4, 0x81, 0x9C, 0x6A, 0xEF, 0x6E, 0x13, 0xC9, 0x79, 0x14, 0x61, 0xD3, 0xCA, 0xA7, 
0x9B, 0x9F, 0x8B, 0xEF, 0x60, 0x7E, 0x20, 0x66, 0xFA, 0xDB, 0x98, 0x1F, 0x88, 0x19, 0xBE, 0xB6, 
0xE6, 0x07, 0xBC, 0x30, 0x14, 0xC1, 0x2A, 0x04, 0xFC, 0x9C, 0x2A, 0x69, 0xA2, 0x9E, 0x26, 0x17, 
0x12, 0x06, 0x71, 0xAB, 0xBD, 0x85, 0xC4, 0x81, 0x9C, 0x6A, 0xEF, 0x61, 0x71, 0x20, 0x67, 0x1A, 
0xBB, 0xF2, 0x1F, 0x2B, 0x42, 0xC0, 0x5F, 0x46, 0xBD, 0x2B, 0x61, 0xB7, 0x22, 0xEB, 0x8F, 0xA4, 
0xE4, 0x3F, 0xE0, 0xDE, 0xF6, 0x91, 0xA1, 0x1F, 0x4B, 0x43, 0x3F, 0x14, 0x8F, 0xEE, 0x0B, 0xC8, 
0xD7, 0xA5, 0x6C, 0x36, 0xDE, 0x9C, 0xF9, 0x94, 0x70, 0x9C, 0xD8, 0xAC, 0x3A, 0x26, 0xF1, 0x1F, 
0x59, 0xC4, 0xCE, 0xAE, 0x9E, 0x4C, 0x09, 0xA6, 0x88, 0x2B, 0x85, 0xCB, 0x13, 0xB6, 0x28, 0xB0, 
0xBE, 0x9A, 0x3D, 0x68, 0xA4, 0x65, 0xEE, 0x53, 0x84, 0xA2, 0x7C, 0x10, 0x96, 0x2F, 0x5A, 0x29, 
0x1B, 0x15, 0x78, 0x4F, 0x4B, 0xDE, 0xB4, 0x52, 0xB6, 0x2A, 0xF0, 0x9E, 0x97, 0xBD, 0x68, 0xA5, 
0x62, 0x5C, 0xAB, 0x0A, 0x31, 0xCA, 0x4F, 0xE7, 0x07, 0xAD, 0x14, 0xAD, 0x8A, 0x2C, 0x2F, 0xA6, 
0x8F, 0x5A, 0x29, 0x1B, 0x14, 0x58, 0x5F, 0x4D, 0x1E, 0xB4, 0x52, 0x36, 0x28, 0xB0, 0xBE, 0x9A, 
0x3D, 0x68, 0xA4, 0x65, 0xEE, 0x53, 0x84, 0xA2, 0x7C, 0x10, 0x96, 0x2F, 0x5A, 0x29, 0x1B, 0x15, 
0x78, 0x4F, 0x4B, 0xDE, 0xB4, 0x52, 0xB6, 0x2A, 0xF0, 0x9E, 0x97, 0xBD, 0x68, 0xA5, 0x62, 0x5C, 
0xAB, 0x0A, 0x31, 0xCA, 0x4F, 0xE7, 0x07, 0xAD, 0x14, 0xAD, 0x8A, 0x2C, 0x2F, 0xA6, 0x8F, 0x5A, 
0x29, 0x1A, 0x6E, 0x26, 0x1D, 0xC2, 0x6E, 0x65, 0x21, 0x23, 0xA8, 0x4A, 0x35, 0xDF, 0x0E, 0x0E, 
0xEA, 0x23, 0xC1, 0x1D, 0x02, 0x92, 0xB2, 0xF3, 0xE5, 0x68, 0x58, 0x0B, 0xD3, 0x8F, 0xF5, 0x81, 
0x2D, 0xFA, 0xED, 0xFF, 0x00, 0xE7, 0x19, 0xAE, 0x58, 0xF4, 0xF2, 0x2B, 0xD5, 0x23, 0xF3, 0xD3, 
0xC8, 0x7C, 0xAD, 0x0B, 0x01, 0x7D, 0x1A, 0xF4, 0xAD, 0x86, 0xDC, 0xB7, 0xCA, 0xD0, 0xB0, 0x17, 
0xD1, 0xAF, 0x4A, 0xD8, 0x6D, 0xC8, 0xBA, 0xE3, 0xE9, 0x39, 0x0F, 0xF8, 0x37, 0xBD, 0xA4, 0x68, 
0x47, 0xD2, 0xD0, 0xCF, 0xC5, 0x23, 0xFB, 0x82, 0xF2, 0x35, 0xE9, 0x5B, 0x0D, 0xB9, 0x0F, 0x95, 
0xA1, 0x60, 0x2F, 0xA3, 0x5E, 0x95, 0xB0, 0xDB, 0x90, 0xF9, 0x5A, 0x16, 0x02, 0xFA, 0x35, 0xE9, 
0x5B, 0x0D, 0xB9, 0x0F, 0x95, 0xA1, 0x60, 0x2F, 0x4E, 0x3F, 0xD6, 0x04, 0xB7, 0xEB, 0xB7, 0xFF, 
0x00, 0x9C, 0x66, 0xB9, 0x63, 0xD3, 0xC8, 0xAF, 0x54, 0x8F, 0xCF, 0x4F, 0x21, 0xF2, 0xB4, 0x2C, 
0x05, 0xF4, 0x6B, 0xD2, 0xB6, 0x1B, 0x72, 0xDF, 0x2B, 0x42, 0xC0, 0x5F, 0x46, 0xBD, 0x2B, 0x61, 
0xB5, 0xA7, 0x92, 0x74, 0x8D, 0x36, 0x10, 0x98, 0x6A, 0xAE, 0xB0, 0xF2, 0x3D, 0xBF, 0xBF, 0xAA, 
0x72, 0x20, 0x45, 0x44, 0x41, 0x22, 0x95, 0x20, 0xA4, 0xC6, 0x3D, 0x0D, 0x8D, 0x9C, 0xBC, 0xF6, 
0x04, 0x0B, 0xE1, 0xAF, 0xE2, 0xB6, 0x36, 0x72, 0xF3, 0xD8, 0x10, 0x2F, 0x86, 0xBF, 0x8A, 0xD3, 
0x8F, 0x3A, 0x31, 0xB9, 0xCD, 0x5E, 0x14, 0xBC, 0x55, 0xC5, 0xC9, 0xD8, 0xCE, 0x09, 0xA8, 0x44, 
0x81, 0xD4, 0xA7, 0x0A, 0x41, 0x4F, 0x5E, 0x19, 0x8C, 0xCE, 0xCB, 0x99, 0xD9, 0xE5, 0x05, 0xCA, 
0x00, 0x26, 0x49, 0x42, 0x9C, 0x00, 0x79, 0x84, 0x4A, 0x34, 0xB6, 0x34, 0x32, 0xDB, 0xD8, 0x70, 
0x5F, 0x71, 0x6F, 0x11, 0x8B, 0x75, 0x14, 0xB7, 0x29, 0xBE, 0x83, 0x82, 0xFB, 0x8B, 0x78, 0x8D, 
0x8D, 0x9C, 0xBC, 0xF6, 0x04, 0x0B, 0xE1, 0xAF, 0xE2, 0xB6, 0x36, 0x72, 0xF3, 0xD8, 0x10, 0x2F, 
0x86, 0xBF, 0x8A, 0xD8, 0xD9, 0xCB, 0xCF, 0x60, 0x40, 0xBE, 0x1A, 0xFE, 0x2B, 0x2B, 0x75, 0x2C, 
0xB8, 0x58, 0xD4, 0x8C, 0x0A, 0x0B, 0xF0, 0xD6, 0xF1, 0x1B, 0x1A, 0x19, 0x6D, 0xEC, 0x38, 0x2F, 
0xB8, 0xB7, 0x88, 0xD8, 0xD0, 0xCB, 0x6F, 0x61, 0xC1, 0x7D, 0xC5, 0xBC, 0x46, 0x2D, 0xD4, 0x52, 
0xDC, 0xA6, 0xFA, 0x0E, 0x0B, 0xEE, 0x2D, 0xE2, 0x36, 0x36, 0x72, 0xF3, 0xD8, 0x10, 0x2F, 0x86, 
0xBF, 0x8A, 0xD8, 0xD9, 0xCB, 0xCF, 0x60, 0x40, 0xBE, 0x1A, 0xFE, 0x2B, 0x63, 0x67, 0x2F, 0x3D, 
0x81, 0x02, 0xF8, 0x6B, 0xF8, 0xAC, 0xAD, 0xD4, 0xB2, 0xE1, 0x63, 0x52, 0x30, 0x28, 0x2F, 0xC3, 
0x5B, 0xC4, 0x6C, 0x68, 0x65, 0xB7, 0xB0, 0xE0, 0xBE, 0xE2, 0xDE, 0x23, 0x63, 0x43, 0x2D, 0xBD, 
0x87, 0x05, 0xF7, 0x16, 0xF1, 0x18, 0xB7, 0x51, 0x4B, 0x72, 0x9B, 0xE8, 0x38, 0x2F, 0xB8, 0xB7, 
0x88, 0xD8, 0xD9, 0xCB, 0xCF, 0x60, 0x40, 0xBE, 0x1A, 0xFE, 0x2B, 0x63, 0x67, 0x2F, 0x3D, 0x81, 
0x02, 0xF8, 0x6B, 0xF8, 0xAD, 0x8D, 0x9C, 0xBC, 0xF6, 0x04, 0x0B, 0xE1, 0xAF, 0xE2, 0xB2, 0xB7, 
0x52, 0xCB, 0x85, 0x8D, 0x48, 0xC0, 0xA0, 0xBF, 0x0D, 0x6F, 0x11, 0xB1, 0xA1, 0x96, 0xDE, 0xC3, 
0x82, 0xFB, 0x8B, 0x78, 0x8D, 0x1C, 0x8B, 0x2F, 0x1E, 0x8C, 0xC5, 0x62, 0xCF, 0x09, 0x90, 0x8B, 
0x3F, 0x3D, 0xAC, 0xF2, 0xA9, 0x13, 0xA4, 0x08, 0x53, 0x2C, 0x61, 0x38, 0x81, 0x69, 0xA4, 0x68, 
0x0A, 0x5A, 0x6F, 0xE7, 0x06, 0x2B, 0x37, 0x31, 0x77, 0x98, 0xAC, 0x31, 0xCD, 0xD5, 0x75, 0x96, 
0x77, 0x14, 0x0C, 0x47, 0x90, 0x31, 0x89, 0x40, 0x9C, 0x0F, 0xCC, 0x43, 0x17, 0xD4, 0xD8, 0xD9, 
0xCB, 0xCF, 0x60, 0x40, 0xBE, 0x1A, 0xFE, 0x2B, 0x63, 0x67, 0x2F, 0x3D, 0x81, 0x02, 0xF8, 0x6B, 
0xF8, 0xAD, 0x32, 0xB3, 0xC6, 0xBC, 0xE5, 0x84, 0x55, 0xCE, 0x23, 0x0B, 0x45, 0xD2, 0x20, 0xE4, 
0x52, 0x2B, 0x4A, 0x15, 0x2A, 0xA4, 0x7B, 0x6C, 0xF9, 0x5A, 0x16, 0x02, 0xFA, 0x35, 0xE9, 0x5B, 
0x0D, 0xB9, 0x6E, 0x75, 0x7D, 0xA1, 0xD8, 0x17, 0xD4, 0xAA, 0x52, 0xC1, 0x9A, 0xEA, 0xAA, 0x89, 
0x13, 0x6D, 0xFF, 0x00, 0x62, 0x5F, 0xDF, 0x5C, 0xB5, 0xE9, 0x14, 0xA8, 0xEA, 0xF4, 0xFE, 0x63, 
0x39, 0xD5, 0xF6, 0x87, 0x60, 0x5F, 0x52, 0xA9, 0x4B, 0x06, 0xCB, 0x73, 0xAB, 0xED, 0x0E, 0xC0, 
0xBE, 0xA5, 0x52, 0x96, 0x0C, 0xD7, 0x55, 0x54, 0x48, 0x9B, 0x6F, 0xFB, 0x12, 0xFE, 0xFA, 0xE5, 
0xAF, 0x48, 0xA5, 0x47, 0x57, 0xA7, 0xF3, 0x19, 0xCE, 0xAF, 0xB4, 0x3B, 0x02, 0xFA, 0x95, 0x4A, 
0x58, 0x36, 0x5B, 0x9D, 0x5F, 0x68, 0x76, 0x05, 0xF5, 0x2A, 0x94, 0xB0, 0x66, 0xBA, 0xAA, 0xA2, 
0x44, 0xDB, 0x7F, 0xD8, 0x97, 0xF7, 0xD7, 0x2D, 0x7A, 0x45, 0x2A, 0x3A, 0xBD, 0x3F, 0x98, 0xCE, 
0x75, 0x7D, 0xA1, 0xD8, 0x17, 0xD4, 0xAA, 0x52, 0xC1, 0xB2, 0x05, 0xC4, 0x81, 0x9C, 0x6A, 0xEF, 
0x61, 0x71, 0x20, 0x67, 0x1A, 0xBB, 0xD8, 0x5C, 0x48, 0x19, 0xC6, 0xAE, 0xF6, 0xE1, 0x3C, 0x97, 
0x91, 0x46, 0x1D, 0x3C, 0xAA, 0x79, 0xB9, 0xF8, 0xBE, 0xF6, 0x07, 0xE2, 0x06, 0x6F, 0xAD, 0xB9, 
0x81, 0xF8, 0x81, 0x9B, 0xEB, 0x6E, 0x60, 0x7B, 0xC3, 0x01, 0x4C, 0x12, 0xA0, 0x4F, 0xC9, 0xC2, 
0xA6, 0x9A, 0x29, 0xE2, 0x6B, 0xAC, 0x50, 0x14, 0x10, 0x90, 0xD6, 0xDF, 0xFF, 0x00, 0xD7, 0x95, 
0x31, 0x33, 0x5D, 0x23, 0x25, 0xD4, 0x9C, 0x8A, 0xBE, 0x47, 0x5C, 0x17, 0x59, 0xE5, 0x28, 0x88, 
0xA0, 0x91, 0xD3, 0x5C, 0xE9, 0x50, 0x4C, 0x02, 0x19, 0x86, 0xE6, 0xA9, 0xAD, 0x0C, 0xCD, 0xE7, 
0x49, 0x55, 0xB1, 0x6B, 0x9A, 0xDF, 0xFD, 0x8B, 0xDE, 0x90, 0xAB, 0x2D, 0x73, 0x1C, 0xD9, 0xA8, 
0x5A, 0x0B, 0xE5, 0xE9, 0x58, 0x78, 0xEF, 0x34, 0xE2, 0xDC, 0xD8, 0xF9, 0x27, 0x5D, 0x57, 0x88, 
0xC9, 0x88, 0x8A, 0xB1, 0x24, 0x51, 0x20, 0x9D, 0x47, 0x45, 0x8B, 0x42, 0xE0, 0x4F, 0x59, 0x0C, 
0x4E, 0x23, 0xDE, 0x99, 0x59, 0x27, 0x02, 0x96, 0x72, 0xC8, 0xD0, 0xA8, 0xDB, 0xB1, 0xD6, 0x74, 
0xF2, 0x05, 0xD6, 0xC0, 0x22, 0xA6, 0x48, 0x70, 0xC8, 0x25, 0xA3, 0x8C, 0xAD, 0x8B, 0xD4, 0xD5, 
0x1E, 0x82, 0x84, 0x15, 0xEF, 0x4D, 0x55, 0xA7, 0xCE, 0x66, 0x24, 0xD4, 0x89, 0x92, 0xAE, 0x51, 
0xB9, 0x3A, 0x82, 0xC4, 0xC0, 0x7E, 0x22, 0x2F, 0x40, 0x75, 0x4C, 0xA7, 0x21, 0x52, 0x8D, 0x06, 
0xBD, 0x33, 0x52, 0x25, 0xCE, 0x5E, 0xCB, 0x87, 0x58, 0x54, 0x40, 0x87, 0x34, 0x3D, 0x27, 0x65, 
0x9E, 0x1E, 0xC0, 0x82, 0x25, 0x36, 0x01, 0x0B, 0x82, 0x5D, 0x73, 0x03, 0x1E, 0xE7, 0x69, 0xAC, 
0x44, 0x68, 0x34, 0x21, 0xEC, 0xFF, 0x00, 0xFE, 0xB5, 0x4A, 0xD3, 0xD7, 0x35, 0x12, 0x1E, 0x46, 
0x48, 0xD0, 0x8A, 0x41, 0x21, 0xAB, 0xA0, 0xF6, 0x2F, 0xE8, 0xA3, 0x86, 0x77, 0x93, 0xAB, 0xC8, 
0x3D, 0xA6, 0x82, 0xBB, 0x22, 0xF9, 0x18, 0x84, 0xBA, 0xAE, 0x51, 0x14, 0x96, 0x7C, 0x45, 0x35, 
0x00, 0x06, 0x8A, 0x4A, 0x73, 0x81, 0x45, 0xB1, 0x7A, 0x9A, 0xA3, 0xD0, 0x50, 0x82, 0xBD, 0xE9, 
0xAA, 0xB0, 0xDC, 0xD5, 0x35, 0xA1, 0x99, 0xBC, 0xE9, 0x2A, 0xB1, 0xEE, 0x67, 0x9B, 0x33, 0x05, 
0x43, 0xE9, 0x6C, 0xBC, 0x99, 0xA5, 0x25, 0xCA, 0x30, 0x55, 0x9D, 0x16, 0x52, 0x4D, 0xCA, 0x17, 
0x94, 0x1E, 0x8A, 0x5A, 0x4A, 0x93, 0xED, 0x0A, 0x24, 0x6E, 0xD1, 0x68, 0x12, 0xB4, 0x7E, 0x01, 
0x16, 0x93, 0x11, 0x77, 0xC8, 0x44, 0x59, 0xCC, 0xEE, 0xCF, 0xAE, 0xC7, 0xC1, 0x51, 0x33, 0x6D, 
0x01, 0xFB, 0x4A, 0x39, 0x57, 0x29, 0xA3, 0xC3, 0x4A, 0x49, 0x53, 0xCB, 0xA2, 0x88, 0x72, 0x7F, 
0x31, 0xB8, 0x4F, 0x25, 0xE4, 0x51, 0x87, 0x4F, 0x2A, 0x9E, 0x6E, 0x7E, 0x2F, 0xBD, 0x81, 0xF8, 
0x81, 0x9B, 0xEB, 0x6E, 0x60, 0x7E, 0x20, 0x66, 0xFA, 0xDB, 0x98, 0x1E, 0xF0, 0xC0, 0x53, 0x04, 
0xA8, 0x13, 0xF2, 0x70, 0xA9, 0xA6, 0x8A, 0x78, 0x98, 0x5C, 0x48, 0x19, 0xC6, 0xAE, 0xF6, 0x17, 
0x12, 0x06, 0x71, 0xAB, 0xBD, 0x85, 0xC4, 0x81, 0x9C, 0x6A, 0xEF, 0xC8, 0x7C, 0xAD, 0x0B, 0x01, 
0x7D, 0x1A, 0xF4, 0xAD, 0x86, 0xD6, 0xBA, 0xF6, 0xAA, 0x42, 0x5A, 0x7F, 0xFF, 0x00, 0x56, 0x55, 
0xCA, 0xDE, 0x89, 0xC6, 0x7A, 0xEB, 0xFD, 0x24, 0x69, 0xED, 0x96, 0xD1, 0xC9, 0x03, 0x23, 0xDD, 
0xE2, 0xF0, 0x51, 0x44, 0x1E, 0x8F, 0x11, 0x45, 0x01, 0xE1, 0x93, 0xC3, 0x2E, 0x01, 0xC8, 0x71, 
0x6C, 0x67, 0x27, 0x3F, 0xFF, 0x00, 0x5C, 0x2F, 0x44, 0x68, 0x0D, 0xD4, 0xF2, 0xCD, 0xD5, 0xF9, 
0x0F, 0xE3, 0x50, 0xE8, 0x7B, 0xDB, 0x88, 0x98, 0x01, 0x62, 0xA2, 0x99, 0xD1, 0x5B, 0xB0, 0x34, 
0xB1, 0xDE, 0x50, 0x7D, 0x49, 0xD1, 0xE9, 0xD8, 0xF8, 0x48, 0x2E, 0xEE, 0x9A, 0xA9, 0x1A, 0x8A, 
0x29, 0x21, 0xF8, 0xC0, 0x7F, 0xFB, 0x69, 0xE9, 0x81, 0xBA, 0x40, 0x27, 0x1E, 0x50, 0xBB, 0x39, 
0x90, 0x08, 0xEE, 0xA9, 0x93, 0x79, 0x21, 0x03, 0x98, 0xA2, 0xB9, 0x00, 0xE6, 0xD6, 0x6B, 0x9A, 
0xFE, 0xB1, 0x8F, 0xD5, 0x4F, 0x3B, 0x48, 0xCA, 0xBD, 0xA0, 0xE4, 0x04, 0x5D, 0x73, 0x60, 0xA6, 
0x0A, 0xA4, 0x51, 0x30, 0xF3, 0x00, 0x9C, 0xE0, 0x50, 0x11, 0xFB, 0xB8, 0xF8, 0xDA, 0x73, 0xA0, 
0x01, 0x29, 0xE6, 0xFE, 0x56, 0x42, 0xCA, 0x9E, 0x1A, 0xA7, 0x70, 0x51, 0x54, 0x7F, 0xCA, 0x85, 
0x0A, 0x13, 0x65, 0xEB, 0x93, 0xA0, 0x3C, 0x13, 0x8C, 0xAC, 0x94, 0x27, 0x2D, 0x6A, 0xA8, 0xB8, 
0xA3, 0xD8, 0x0E, 0x15, 0x46, 0x7C, 0x7A, 0x77, 0x18, 0x81, 0x9D, 0x0A, 0x7F, 0xF8, 0xA4, 0x77, 
0x4D, 0x53, 0x17, 0xD4, 0x43, 0x98, 0xC0, 0x14, 0xFF, 0x00, 0xE7, 0x04, 0x5A, 0xE9, 0x4F, 0xAB, 
0x92, 0x75, 0xAB, 0xB6, 0xC3, 0xB4, 0x9B, 0xF4, 0x8A, 0x03, 0xD6, 0x0E, 0xDF, 0x30, 0x19, 0x1A, 
0xF4, 0xAD, 0x86, 0xD6, 0x97, 0x97, 0x42, 0xCB, 0xF9, 0x35, 0x2C, 0xE5, 0x24, 0x19, 0xC4, 0x21, 
0xA2, 0xE8, 0xE2, 0xFC, 0xAA, 0x28, 0x82, 0x88, 0x18, 0xC6, 0xC1, 0x2F, 0x69, 0x9C, 0xAE, 0xA9, 
0x97, 0xC8, 0x2E, 0x41, 0x7C, 0x85, 0xC2, 0x1E, 0x51, 0xA7, 0x96, 0x42, 0xA4, 0xA2, 0x5B, 0x0E, 
0xD2, 0x0A, 0x5B, 0x42, 0xA7, 0x06, 0x4D, 0x3A, 0xC7, 0x21, 0xE5, 0x32, 0x60, 0x73, 0x19, 0x25, 
0x90, 0x38, 0xD2, 0x64, 0x55, 0x27, 0x39, 0x05, 0xAE, 0xAC, 0x93, 0x2E, 0xCA, 0xC2, 0xA0, 0x92, 
0x8D, 0x24, 0xCA, 0x0F, 0x2E, 0xCB, 0x03, 0x9A, 0xA7, 0xFB, 0x4E, 0x92, 0xB4, 0x98, 0xB9, 0x57, 
0x26, 0x7A, 0x49, 0x2B, 0x7A, 0xB1, 0x2F, 0x9A, 0xCF, 0x95, 0xA1, 0x60, 0x2F, 0xA3, 0x5E, 0x95, 
0xB0, 0xDB, 0x96, 0xF9, 0x5A, 0x16, 0x02, 0xFA, 0x35, 0xE9, 0x5B, 0x0D, 0xAD, 0x75, 0xED, 0x54, 
0x84, 0xB4, 0xFF, 0x00, 0xFE, 0xAC, 0xAB, 0x95, 0xBD, 0x13, 0x8C, 0xF5, 0xD7, 0xFA, 0x48, 0xD3, 
0xFF, 0x00, 0x25, 0x63, 0xF2, 0xBA, 0x43, 0xBA, 0xC3, 0xA0, 0x30, 0xE3, 0xBE, 0xBD, 0x04, 0x51, 
0x05, 0x85, 0x22, 0x98, 0xA5, 0xE4, 0x14, 0x87, 0x2D, 0x3C, 0xB6, 0x24, 0xC3, 0xCE, 0xD1, 0xE9, 
0xA2, 0x47, 0x2F, 0xF1, 0xD0, 0xEF, 0xB4, 0x9D, 0xB9, 0xBA, 0x72, 0x22, 0xAF, 0xE8, 0x12, 0x27, 
0x0E, 0x4E, 0x14, 0xE5, 0x86, 0x1C, 0x33, 0xC2, 0xCB, 0x26, 0x71, 0x02, 0x7F, 0xF0, 0x22, 0x62, 
0x34, 0x99, 0x9F, 0x0F, 0x0D, 0x93, 0x90, 0xA4, 0x85, 0x67, 0x82, 0xBB, 0xB8, 0x43, 0xDC, 0x88, 
0x51, 0x51, 0x43, 0x50, 0x04, 0x49, 0x10, 0xA0, 0x29, 0x1F, 0xB8, 0x01, 0xA7, 0x12, 0x54, 0x04, 
0xB2, 0x96, 0x51, 0xC8, 0xD9, 0x0A, 0x25, 0x41, 0x75, 0x80, 0xAE, 0xE5, 0x1E, 0x70, 0x45, 0x22, 
0x82, 0x64, 0xD8, 0xD7, 0x35, 0xFD, 0x63, 0x1F, 0xAA, 0x9E, 0x76, 0x91, 0xA7, 0x51, 0x65, 0x1D, 
0xE6, 0xF2, 0x56, 0xAE, 0x91, 0xC4, 0xAA, 0x26, 0xE2, 0x63, 0x90, 0xDE, 0xA3, 0x14, 0x5A, 0x4F, 
0x46, 0x13, 0x94, 0x32, 0x7A, 0x07, 0x16, 0x4E, 0x8C, 0x07, 0xE7, 0x24, 0x5E, 0x00, 0x3D, 0x5C, 
0x29, 0x00, 0xC2, 0x0D, 0x38, 0x30, 0x01, 0x93, 0x12, 0xDA, 0x53, 0xC1, 0xF0, 0x30, 0x48, 0xEC, 
0xFE, 0xA8, 0x25, 0xFE, 0x23, 0x8E, 0x1A, 0x7A, 0xA2, 0xD3, 0x25, 0x02, 0xFE, 0x5C, 0x9B, 0x09, 
0x2E, 0x80, 0x96, 0x85, 0xDE, 0x90, 0x17, 0xD5, 0xAD, 0x3C, 0xF2, 0xC3, 0x55, 0xA4, 0xF4, 0x7B, 
0xF8, 0xDC, 0xEA, 0xCE, 0x7A, 0x64, 0x3D, 0x29, 0x43, 0x51, 0x85, 0xB8, 0xA7, 0xD8, 0xE1, 0x4E, 
0x7D, 0x63, 0x35, 0xD2, 0x9F, 0x57, 0x24, 0xEB, 0x57, 0x6D, 0x87, 0x69, 0x37, 0xE9, 0x14, 0x07, 
0xAC, 0x1D, 0xBE, 0x60, 0x32, 0x35, 0xE9, 0x5B, 0x0D, 0xAD, 0x3C, 0x1F, 0x59, 0xF2, 0xE7, 0xAD, 
0x57, 0x60, 0x01, 0x30, 0x80, 0x00, 0x52, 0x23, 0xCC, 0x0D, 0x73, 0xAC, 0x95, 0x8B, 0x49, 0x79, 
0x04, 0xA0, 0xC5, 0x10, 0x3A, 0x0B, 0xC4, 0x9F, 0x8E, 0xF8, 0x44, 0x0E, 0x14, 0x1C, 0x89, 0x89, 
0x0A, 0x42, 0xE1, 0x35, 0xD4, 0x2F, 0x88, 0xBB, 0x48, 0x24, 0x5D, 0x8C, 0x7A, 0x54, 0x7A, 0x88, 
0x20, 0x52, 0x76, 0x30, 0xCF, 0x95, 0x72, 0x67, 0xA4, 0x92, 0xB7, 0xAB, 0x12, 0xF9, 0xAC, 0xF9, 
0x5A, 0x16, 0x02, 0xFA, 0x35, 0xE9, 0x5B, 0x0D, 0xB9, 0x6F, 0x95, 0xA1, 0x60, 0x2F, 0xA3, 0x5E, 
0x95, 0xB0, 0xDA, 0xD7, 0x5E, 0xD5, 0x48, 0x4B, 0x4F, 0xFF, 0x00, 0xEA, 0xCA, 0xB9, 0x5B, 0xD1, 
0x38, 0xCF, 0x5D, 0x7F, 0xA4, 0x8D, 0x28, 0x25, 0x2C, 0x0A, 0x4A, 0xB8, 0x95, 0xFE, 0x37, 0x12, 
0x4D, 0xC9, 0xD4, 0xCA, 0x82, 0x40, 0xAA, 0x94, 0xD1, 0x86, 0x6A, 0x44, 0x0B, 0xC9, 0x6F, 0x3D, 
0x13, 0x53, 0xD3, 0x87, 0x2F, 0xC9, 0x46, 0x86, 0xCE, 0x7C, 0xDD, 0x45, 0xD6, 0x49, 0xDD, 0xCA, 
0x59, 0xC3, 0x0E, 0xBA, 0x83, 0x41, 0x48, 0x2B, 0x82, 0x66, 0x1F, 0xB8, 0x00, 0xF4, 0x34, 0xE5, 
0x48, 0x08, 0x5C, 0xE0, 0x43, 0xCB, 0x0F, 0x7F, 0x7D, 0x7C, 0x43, 0x00, 0x29, 0x4C, 0xE8, 0x2A, 
0x25, 0x28, 0x1B, 0xD6, 0x74, 0xC7, 0x92, 0x76, 0x97, 0x32, 0x26, 0x2B, 0x20, 0xE3, 0xEB, 0xC1, 
0xE2, 0x20, 0x06, 0xA0, 0xA0, 0xA2, 0x0B, 0x94, 0x39, 0x0B, 0xA4, 0x6E, 0x63, 0x83, 0x5C, 0xD7, 
0xF5, 0x8C, 0x7E, 0xAA, 0x79, 0xDA, 0x46, 0x9D, 0xBF, 0xAB, 0x69, 0x67, 0xD5, 0xCA, 0x35, 0xCD, 
0xF1, 0xE0, 0x8C, 0x4D, 0x8B, 0x93, 0xA1, 0xCF, 0x4A, 0xD0, 0xB7, 0xB5, 0xDC, 0xC6, 0xC5, 0x71, 
0x3F, 0x7B, 0x5D, 0x07, 0x22, 0x14, 0x88, 0xCE, 0xAC, 0x90, 0x17, 0x62, 0x71, 0x4A, 0x22, 0xA0, 
0xEA, 0x63, 0x7F, 0xDD, 0x48, 0xE0, 0x91, 0x8D, 0xEE, 0x08, 0x32, 0xA7, 0x74, 0x84, 0x43, 0x54, 
0x50, 0xC0, 0x09, 0xBA, 0xB9, 0x3B, 0x18, 0xE3, 0xEA, 0x22, 0x48, 0x93, 0x60, 0x00, 0x35, 0xCD, 
0xD1, 0x35, 0xA3, 0x31, 0xB9, 0xCB, 0x8A, 0x2F, 0x5A, 0xFA, 0xF2, 0xEC, 0xF0, 0x7B, 0x4A, 0x9D, 
0x63, 0xB5, 0xD2, 0x9F, 0x57, 0x24, 0xEB, 0x57, 0x6D, 0x87, 0x69, 0x37, 0xE9, 0x14, 0x07, 0xAC, 
0x1D, 0xBE, 0x60, 0x32, 0x35, 0xE9, 0x5B, 0x0D, 0xAC, 0xF9, 0x22, 0x64, 0x64, 0x41, 0xE9, 0x77, 
0xC7, 0xC9, 0x27, 0x09, 0x5D, 0x75, 0x8E, 0x27, 0x55, 0x55, 0x5C, 0xD2, 0x3A, 0x87, 0x30, 0xFD, 
0xA6, 0x30, 0x83, 0x39, 0x49, 0x39, 0x29, 0x0C, 0x50, 0x8A, 0xB8, 0x49, 0x88, 0x5B, 0xA2, 0xA5, 
0xE6, 0x51, 0x17, 0x44, 0x93, 0x3F, 0xE6, 0x52, 0x83, 0x46, 0x63, 0x90, 0x79, 0x3B, 0x0F, 0x5A, 
0x21, 0x17, 0x89, 0x20, 0xE4, 0xEA, 0x9F, 0xFD, 0x4A, 0xAC, 0x6C, 0x10, 0x0F, 0xB8, 0x3D, 0x62, 
0x3E, 0xA0, 0x69, 0xE7, 0x9C, 0xEF, 0x38, 0xF2, 0x85, 0x23, 0x39, 0x90, 0xE9, 0xC2, 0x1C, 0x0A, 
0x64, 0x9C, 0x88, 0x7E, 0x23, 0x1E, 0x9E, 0x33, 0x2A, 0x6B, 0x59, 0x57, 0x26, 0x7A, 0x49, 0x2B, 
0x7A, 0xB1, 0x2F, 0x9A, 0xCF, 0x95, 0xA1, 0x60, 0x2F, 0xA3, 0x5E, 0x95, 0xB0, 0xDB, 0x96, 0xE7, 
0x57, 0xDA, 0x1D, 0x81, 0x7D, 0x4A, 0xA5, 0x2C, 0x19, 0xAE, 0xAA, 0xA8, 0x91, 0x36, 0xDF, 0xF6, 
0x25, 0x95, 0x72, 0x9F, 0xA0, 0xB2, 0x9F, 0xAD, 0x54, 0xF9, 0x09, 0xB5, 0xD3, 0x1F, 0x57, 0xAE, 
0xBD, 0x6E, 0x87, 0xCB, 0x3D, 0xFB, 0x9F, 0xE2, 0xF1, 0x08, 0xBC, 0xD8, 0x41, 0x95, 0x7F, 0x50, 
0xEA, 0xA8, 0x8A, 0xCB, 0xBB, 0x91, 0x43, 0xF1, 0x89, 0x93, 0x48, 0xD4, 0x15, 0xAE, 0xB1, 0x87, 
0xBB, 0x9A, 0x4E, 0xC9, 0x48, 0x89, 0x89, 0x43, 0xC2, 0x4F, 0xEA, 0xA0, 0x5B, 0x0A, 0x90, 0x4D, 
0xB4, 0x8D, 0x72, 0xE7, 0xD6, 0x78, 0xF5, 0x4B, 0xD6, 0xD2, 0x34, 0xF0, 0x7D, 0x57, 0x4B, 0x7E, 
0xAE, 0x3B, 0x5C, 0xB9, 0x1C, 0xE0, 0x63, 0x32, 0x92, 0x08, 0x73, 0xF1, 0x3C, 0xBA, 0xA6, 0xF4, 
0x9D, 0xA4, 0x0D, 0x81, 0xB0, 0xED, 0x16, 0x93, 0x8E, 0x31, 0x88, 0xA4, 0x9B, 0x89, 0x2F, 0x5D, 
0x08, 0x79, 0x55, 0x74, 0x7E, 0xF1, 0x55, 0x23, 0x25, 0x46, 0xC1, 0x69, 0xED, 0x8D, 0xFF, 0x00, 
0x03, 0x9B, 0x59, 0x46, 0x72, 0x9E, 0x85, 0x5E, 0xD3, 0x2B, 0x92, 0x7F, 0xF9, 0x78, 0x1C, 0x13, 
0x6A, 0x35, 0xC8, 0xF5, 0x92, 0xF2, 0xC3, 0x86, 0xD5, 0x1A, 0xE9, 0xFF, 0x00, 0xAB, 0x30, 0xEB, 
0x77, 0x5F, 0xD8, 0x76, 0x93, 0x3E, 0x92, 0x49, 0xFE, 0xB1, 0x75, 0xF9, 0x80, 0xCA, 0x55, 0x29, 
0x60, 0xCD, 0x39, 0x13, 0x91, 0x2E, 0xE1, 0x72, 0xEE, 0x55, 0xB8, 0xB8, 0xCA, 0xB7, 0xF4, 0x1D, 
0x50, 0x7F, 0x54, 0x88, 0xA4, 0x45, 0x68, 0x29, 0x0A, 0xCA, 0x4E, 0x74, 0xE1, 0xAA, 0x02, 0x06, 
0x96, 0xB1, 0x7E, 0xCB, 0xD9, 0xCB, 0xB1, 0xA2, 0x11, 0x58, 0xA4, 0x59, 0x50, 0x56, 0x23, 0x12, 
0x7A, 0x7B, 0x50, 0x39, 0x8E, 0xF0, 0xA9, 0x95, 0x37, 0xE6, 0x61, 0x1C, 0xBB, 0x96, 0xBD, 0x22, 
0x95, 0x1D, 0x5E, 0x9F, 0xCC, 0x67, 0x3A, 0xBE, 0xD0, 0xEC, 0x0B, 0xEA, 0x55, 0x29, 0x60, 0xD9, 
0x6E, 0x75, 0x7D, 0xA1, 0xD8, 0x17, 0xD4, 0xAA, 0x52, 0xC1, 0x9A, 0xEA, 0xAA, 0x89, 0x13, 0x6D, 
0xFF, 0x00, 0x62, 0x59, 0x57, 0x29, 0xFA, 0x0B, 0x29, 0xFA, 0xD5, 0x4F, 0x90, 0x9B, 0x4E, 0x4C, 
0x83, 0x24, 0xE2, 0x40, 0x12, 0x83, 0x1E, 0x26, 0x2E, 0x20, 0x47, 0xB4, 0xDE, 0x38, 0x50, 0x48, 
0x15, 0xE3, 0x21, 0x4C, 0x14, 0x51, 0x49, 0x7D, 0x6D, 0x8A, 0xAB, 0xAF, 0x4D, 0x95, 0xD0, 0x43, 
0xC4, 0x67, 0x2B, 0x96, 0xA0, 0x49, 0x2C, 0x43, 0x3E, 0xCA, 0xA7, 0xC5, 0xD2, 0xFB, 0x48, 0x92, 
0x04, 0x47, 0xBE, 0xD2, 0x6A, 0x11, 0x0E, 0x93, 0xF0, 0x67, 0x48, 0x64, 0x35, 0xD8, 0xAE, 0xEE, 
0x8E, 0xA1, 0xC1, 0xA2, 0x99, 0x7E, 0xC0, 0x06, 0xBA, 0x72, 0x5D, 0x39, 0xC7, 0x63, 0xF0, 0xE9, 
0x39, 0x0E, 0x58, 0x14, 0x42, 0x0F, 0x86, 0x2F, 0x27, 0x28, 0xE7, 0x2A, 0x77, 0x1A, 0xE5, 0xCF, 
0xAC, 0xF1, 0xEA, 0x97, 0xAD, 0xA4, 0x69, 0xE0, 0xFA, 0xAE, 0x96, 0xFD, 0x5C, 0x76, 0x9A, 0x08, 
0xDF, 0xF0, 0x09, 0xC6, 0x92, 0xCF, 0x46, 0x3D, 0x09, 0x2A, 0xF4, 0x0E, 0xAA, 0xD9, 0x79, 0x01, 
0x4B, 0x69, 0xAF, 0x5D, 0x4B, 0x1B, 0xA1, 0xDA, 0x4B, 0x40, 0x88, 0x7F, 0xFA, 0xCE, 0xAB, 0xEA, 
0xC5, 0xB0, 0x1C, 0x12, 0x6D, 0x72, 0x3D, 0x64, 0xBC, 0xB0, 0xE1, 0xB5, 0x46, 0xBA, 0x7F, 0xEA, 
0xCC, 0x3A, 0xDD, 0xD7, 0xF6, 0x1D, 0xA4, 0xCF, 0xA4, 0x92, 0x7F, 0xAC, 0x5D, 0x7E, 0x60, 0x32, 
0x95, 0x4A, 0x58, 0x33, 0x4E, 0xB7, 0xD6, 0x44, 0xB3, 0xEB, 0x35, 0xBF, 0xE4, 0xDC, 0xB5, 0xE9, 
0x14, 0xA8, 0xEA, 0xF4, 0xFE, 0x63, 0x39, 0xD5, 0xF6, 0x87, 0x60, 0x5F, 0x52, 0xA9, 0x4B, 0x06, 
0xCB, 0x73, 0xAB, 0xED, 0x0E, 0xC0, 0xBE, 0xA5, 0x52, 0x96, 0x0C, 0xD7, 0x55, 0x54, 0x48, 0x9B, 
0x6F, 0xFB, 0x12, 0xCA, 0x9A, 0x89, 0xED, 0x4A, 0x6C, 0xE0, 0x31, 0x58, 0x49, 0xE4, 0xD9, 0x9F, 
0xC5, 0xED, 0xF0, 0x5E, 0x01, 0x50, 0x7A, 0x04, 0x70, 0x29, 0x20, 0x12, 0x8A, 0x30, 0x0C, 0xD8, 
0xD5, 0x21, 0xD0, 0x73, 0xE9, 0xE1, 0xE1, 0x36, 0x35, 0x48, 0x74, 0x1C, 0xFA, 0x78, 0x78, 0x4C, 
0x7B, 0xAA, 0xC6, 0x8E, 0x44, 0x86, 0xFC, 0xE2, 0x14, 0xEC, 0x49, 0xA5, 0x45, 0xD2, 0x12, 0xDE, 
0x36, 0xE6, 0xBB, 0x8C, 0x31, 0x34, 0x20, 0xE8, 0x2A, 0x14, 0x1D, 0x44, 0x29, 0x3B, 0xC7, 0xC4, 
0x16, 0x31, 0xCC, 0x73, 0x18, 0xC6, 0x30, 0x89, 0x84, 0x44, 0x44, 0x47, 0x8E, 0x9A, 0x5A, 0x6B, 
0x65, 0xF1, 0x26, 0xE2, 0x53, 0x8C, 0x70, 0xD0, 0xB1, 0x7F, 0x01, 0x74, 0x55, 0xDF, 0x81, 0x05, 
0x81, 0x1A, 0xCA, 0x39, 0x54, 0xD0, 0x66, 0x96, 0x77, 0x4B, 0xA1, 0x2A, 0xE4, 0xB4, 0x6E, 0x02, 
0x59, 0x18, 0x77, 0x61, 0x7F, 0x76, 0x32, 0x20, 0xB8, 0xBF, 0x61, 0xE0, 0x6A, 0x03, 0x24, 0xAA, 
0x88, 0x2A, 0x92, 0xC9, 0x98, 0x4A, 0x74, 0xCC, 0x07, 0x29, 0x83, 0xEC, 0x12, 0xF1, 0x80, 0xB2, 
0x77, 0x55, 0x26, 0x09, 0x90, 0x14, 0x91, 0x26, 0x31, 0xE8, 0xE5, 0x18, 0x1F, 0xC3, 0xC2, 0x69, 
0xCA, 0x97, 0x6A, 0x4E, 0x1C, 0xA5, 0x18, 0xD1, 0x9C, 0x85, 0xD1, 0x32, 0xBB, 0x26, 0x82, 0x48, 
0x0A, 0x9C, 0x2E, 0x01, 0x49, 0x48, 0xF3, 0xD0, 0x1F, 0x68, 0xB4, 0xD0, 0x4E, 0xDA, 0x73, 0x58, 
0x78, 0xF1, 0x8F, 0x02, 0x34, 0x47, 0xF8, 0x88, 0x3B, 0xE7, 0x00, 0x8E, 0x07, 0x03, 0x85, 0xEB, 
0x21, 0xDA, 0x74, 0x67, 0xE9, 0x19, 0xC7, 0x93, 0x05, 0x81, 0x92, 0x4B, 0x99, 0xC2, 0x87, 0xB4, 
0x97, 0xE1, 0xC5, 0xEC, 0x16, 0xAB, 0xEC, 0x15, 0xA1, 0x6F, 0x81, 0x0E, 0x89, 0x43, 0x9F, 0x45, 
0x3C, 0x30, 0x76, 0x79, 0x49, 0x6C, 0x0A, 0x68, 0xC2, 0xE0, 0xCC, 0x06, 0xA1, 0x8F, 0x75, 0xB3, 
0xA9, 0x89, 0xE8, 0x12, 0x9C, 0xDE, 0xD1, 0x0F, 0x05, 0xA5, 0x64, 0x74, 0x25, 0x3C, 0xA5, 0x8D, 
0x46, 0xC1, 0xD8, 0x5D, 0xC1, 0xF9, 0xE8, 0xEB, 0x82, 0x38, 0x78, 0x78, 0x18, 0x5F, 0x65, 0x34, 
0x05, 0x3F, 0xF2, 0x6E, 0x5A, 0xF4, 0x8A, 0x54, 0x75, 0x7A, 0x7F, 0x31, 0x9C, 0xEA, 0xFB, 0x43, 
0xB0, 0x2F, 0xA9, 0x54, 0xA5, 0x83, 0x64, 0x0B, 0x89, 0x03, 0x38, 0xD5, 0xDE, 0xC2, 0xE2, 0x40, 
0xCE, 0x35, 0x77, 0xB0, 0xB8, 0x90, 0x33, 0x8D, 0x5D, 0xED, 0xC2, 0x79, 0x2F, 0x22, 0x8C, 0x3A, 
0x79, 0x54, 0xF3, 0x73, 0xF1, 0x7D, 0xEC, 0x0F, 0xC4, 0x0C, 0xDF, 0x5B, 0x73, 0x03, 0xF1, 0x03, 
0x37, 0xD6, 0xDC, 0xC0, 0xF7, 0x86, 0x02, 0x98, 0x25, 0x40, 0x9F, 0x93, 0x85, 0x4D, 0x34, 0x53, 
0xC4, 0xD7, 0x58, 0xA0, 0x28, 0x21, 0x21, 0xAD, 0xBF, 0xFF, 0x00, 0xAF, 0xFB, 0xEB, 0x94, 0xD1, 
0xE1, 0xA5, 0x24, 0xA9, 0xE5, 0xD1, 0x44, 0x39, 0x3F, 0x98, 0xDC, 0x27, 0x92, 0xF2, 0x28, 0xC3, 
0xA7, 0x95, 0x4F, 0x37, 0x3F, 0x17, 0xDE, 0xC0, 0xFC, 0x40, 0xCD, 0xF5, 0xB7, 0x30, 0x3F, 0x10, 
0x33, 0x7D, 0x6D, 0xCC, 0x0F, 0x78, 0x60, 0x29, 0x82, 0x54, 0x09, 0xF9, 0x38, 0x54, 0xD3, 0x45, 
0x3C, 0x4C, 0x2E, 0x24, 0x0C, 0xE3, 0x57, 0x7B, 0x0B, 0x89, 0x03, 0x38, 0xD5, 0xDE, 0xC2, 0xE2, 
0x40, 0xCE, 0x35, 0x77, 0xE4, 0x3E, 0x56, 0x85, 0x80, 0xBE, 0x8D, 0x7A, 0x56, 0xC3, 0x6B, 0x5D, 
0x7B, 0x55, 0x21, 0x2D, 0x3F, 0xFF, 0x00, 0xAB, 0xFB, 0xEB, 0x93, 0x3D, 0x24, 0x95, 0xBD, 0x58, 
0x97, 0xCD, 0x67, 0xCA, 0xD0, 0xB0, 0x17, 0xD1, 0xAF, 0x4A, 0xD8, 0x6D, 0xCB, 0x7C, 0xAD, 0x0B, 
0x01, 0x7D, 0x1A, 0xF4, 0xAD, 0x86, 0xD6, 0xBA, 0xF6, 0xAA, 0x42, 0x5A, 0x7F, 0xFF, 0x00, 0x57, 
0xF7, 0xD7, 0x26, 0x7A, 0x49, 0x2B, 0x7A, 0xB1, 0x2F, 0x9A, 0xCF, 0x95, 0xA1, 0x60, 0x2F, 0xA3, 
0x5E, 0x95, 0xB0, 0xDB, 0x96, 0xF9, 0x5A, 0x16, 0x02, 0xFA, 0x35, 0xE9, 0x5B, 0x0D, 0xAD, 0x38, 
0x33, 0x73, 0x00, 0x9C, 0x78, 0x52, 0x10, 0xF8, 0xB8, 0xAC, 0x91, 0xD0, 0x50, 0x55, 0x77, 0x79, 
0x42, 0xB5, 0x33, 0x0D, 0xAA, 0x40, 0x40, 0x5B, 0x14, 0xE9, 0x1F, 0xD2, 0xA8, 0xB7, 0xB8, 0x93, 
0x62, 0x9D, 0x23, 0xFA, 0x55, 0x16, 0xF7, 0x12, 0x69, 0xEA, 0x9A, 0xD8, 0x54, 0xD8, 0xBD, 0xC0, 
0x10, 0x87, 0x44, 0x9E, 0x5E, 0xC1, 0xFD, 0x15, 0xCE, 0x71, 0x5F, 0x04, 0x2A, 0xAC, 0xB3, 0x92, 
0x00, 0xF4, 0xF8, 0xE8, 0x81, 0x84, 0x40, 0xAA, 0xAC, 0x99, 0x04, 0x43, 0xD4, 0x63, 0x50, 0xD8, 
0xAE, 0x49, 0x5E, 0x91, 0xC5, 0x3F, 0x24, 0xBB, 0xAC, 0x4B, 0x96, 0x64, 0xA9, 0xCE, 0x52, 0xFF, 
0x00, 0x31, 0xC5, 0x3F, 0x24, 0x9B, 0x14, 0xE9, 0x1F, 0xD2, 0xA8, 0xB7, 0xB8, 0x93, 0x62, 0x9D, 
0x23, 0xFA, 0x55, 0x16, 0xF7, 0x12, 0x6C, 0x53, 0xA4, 0x7F, 0x4A, 0xA2, 0xDE, 0xE2, 0x4C, 0xBD, 
0xCA, 0xD2, 0x51, 0x13, 0xE0, 0x84, 0xA5, 0x8A, 0x0F, 0xC2, 0x6C, 0x57, 0x24, 0xAF, 0x48, 0xE2, 
0x9F, 0x92, 0x5D, 0xD6, 0xC5, 0x72, 0x4A, 0xF4, 0x8E, 0x29, 0xF9, 0x25, 0xDD, 0x62, 0x5C, 0xB3, 
0x25, 0x4E, 0x72, 0x97, 0xF9, 0x8E, 0x29, 0xF9, 0x24, 0xD8, 0xA7, 0x48, 0xFE, 0x95, 0x45, 0xBD, 
0xC4, 0x9B, 0x14, 0xE9, 0x1F, 0xD2, 0xA8, 0xB7, 0xB8, 0x93, 0x62, 0x9D, 0x23, 0xFA, 0x55, 0x16, 
0xF7, 0x12, 0x65, 0xEE, 0x56, 0x92, 0x88, 0x9F, 0x04, 0x25, 0x2C, 0x50, 0x7E, 0x13, 0x62, 0xB9, 
0x25, 0x7A, 0x47, 0x14, 0xFC, 0x92, 0xEE, 0xB6, 0x2B, 0x92, 0x57, 0xA4, 0x71, 0x4F, 0xC9, 0x2E, 
0xEB, 0x12, 0xE5, 0x99, 0x2A, 0x73, 0x94, 0xBF, 0xCC, 0x71, 0x4F, 0xC9, 0x26, 0xC5, 0x3A, 0x47, 
0xF4, 0xAA, 0x2D, 0xEE, 0x24, 0xD8, 0xA7, 0x48, 0xFE, 0x95, 0x45, 0xBD, 0xC4, 0x9B, 0x14, 0xE9, 
0x1F, 0xD2, 0xA8, 0xB7, 0xB8, 0x93, 0x2F, 0x72, 0xB4, 0x94, 0x44, 0xF8, 0x21, 0x29, 0x62, 0x83, 
0xF0, 0x9B, 0x15, 0xC9, 0x2B, 0xD2, 0x38, 0xA7, 0xE4, 0x97, 0x75, 0xA5, 0x4C, 0x25, 0x18, 0x0C, 
0xA5, 0x94, 0x10, 0x84, 0x55, 0x32, 0x89, 0x38, 0x44, 0x1E, 0x5D, 0x88, 0x73, 0xD1, 0x84, 0x62, 
0xA2, 0x71, 0x20, 0x08, 0xB4, 0xCF, 0xCD, 0xF4, 0x3A, 0x71, 0xE5, 0x13, 0xEC, 0x29, 0xFD, 0xF9, 
0xE1, 0xD5, 0x24, 0x5C, 0x85, 0x70, 0x3A, 0x14, 0x53, 0x48, 0x1C, 0xA4, 0xA3, 0x95, 0x69, 0xB1, 
0x4E, 0x91, 0xFD, 0x2A, 0x8B, 0x7B, 0x89, 0x36, 0x29, 0xD2, 0x3F, 0xA5, 0x51, 0x6F, 0x71, 0x26, 
0x9B, 0x89, 0xAA, 0x93, 0x93, 0x68, 0x83, 0xF0, 0x43, 0x14, 0x5D, 0x77, 0x87, 0xC1, 0x2F, 0x0C, 
0xF2, 0xF0, 0x20, 0x27, 0x12, 0x93, 0x98, 0xA1, 0x83, 0x40, 0x00, 0x33, 0xE5, 0x68, 0x58, 0x0B, 
0xE8, 0xD7, 0xA5, 0x6C, 0x36, 0xE5, 0xB9, 0xD5, 0xF6, 0x87, 0x60, 0x5F, 0x52, 0xA9, 0x4B, 0x06, 
0xC8, 0xBA, 0xAB, 0xFA, 0xA9, 0x13, 0xFE, 0x27, 0xED, 0xA9, 0xB4, 0x1B, 0xE9, 0x78, 0x5F, 0xE2, 
0xD1, 0xFD, 0xE1, 0x79, 0x4A, 0xA5, 0x2C, 0x1B, 0x21, 0xCE, 0xAF, 0xB4, 0x3B, 0x02, 0xFA, 0x95, 
0x4A, 0x58, 0x36, 0x43, 0x9D, 0x5F, 0x68, 0x76, 0x05, 0xF5, 0x2A, 0x94, 0xB0, 0x6C, 0x87, 0x3A, 
0xBE, 0xD0, 0xEC, 0x0B, 0xD3, 0x9F, 0xF5, 0x91, 0x2F, 0x7A, 0xFA, 0x21, 0xF3, 0xCC, 0xD7, 0x2B, 
0xFA, 0x6D, 0x28, 0x7A, 0x89, 0x6F, 0x9A, 0x4C, 0x87, 0x3A, 0xBE, 0xD0, 0xEC, 0x0B, 0xEA, 0x55, 
0x29, 0x60, 0xD9, 0x6E, 0x75, 0x7D, 0xA1, 0xD8, 0x17, 0xD4, 0xAA, 0x52, 0xC1, 0xB2, 0x2E, 0xAA, 
0xFE, 0xAA, 0x44, 0xFF, 0x00, 0x89, 0xFB, 0x6A, 0x6D, 0x06, 0xFA, 0x5E, 0x17, 0xF8, 0xB4, 0x7F, 
0x78, 0x5E, 0x52, 0xA9, 0x4B, 0x06, 0xC8, 0x73, 0xAB, 0xED, 0x0E, 0xC0, 0xBE, 0xA5, 0x52, 0x96, 
0x0D, 0x90, 0xE7, 0x57, 0xDA, 0x1D, 0x81, 0x7D, 0x4A, 0xA5, 0x2C, 0x1B, 0x21, 0xCE, 0xAF, 0xB4, 
0x3B, 0x02, 0xF4, 0xE7, 0xFD, 0x64, 0x4B, 0xDE, 0xBE, 0x88, 0x7C, 0xF3, 0x35, 0xCA, 0xFE, 0x9B, 
0x4A, 0x1E, 0xA2, 0x5B, 0xE6, 0x93, 0x21, 0xCE, 0xAF, 0xB4, 0x3B, 0x02, 0xFA, 0x95, 0x4A, 0x58, 
0x36, 0x5B, 0x9D, 0x5F, 0x68, 0x76, 0x05, 0xF5, 0x2A, 0x94, 0xB0, 0x6C, 0x8B, 0xAA, 0xBF, 0xAA, 
0x91, 0x3F, 0xE2, 0x7E, 0xDA, 0x9B, 0x43, 0x55, 0x4D, 0xDE, 0x22, 0xE0, 0xB2, 0xA6, 0xC1, 0x4D, 
0x37, 0x84, 0x8E, 0x71, 0xF5, 0x14, 0xA6, 0x01, 0x16, 0xC6, 0x1A, 0x67, 0xBA, 0x61, 0xFA, 0x17, 
0xBF, 0x09, 0x94, 0x9F, 0xF9, 0xA0, 0x14, 0x8D, 0x44, 0xAF, 0x0A, 0x70, 0x07, 0x31, 0x7C, 0xF0, 
0x9B, 0xCF, 0xCC, 0xD4, 0x74, 0xB3, 0xF4, 0x6F, 0x7E, 0x1B, 0x79, 0xF9, 0x9A, 0x8E, 0x96, 0x7E, 
0x8D, 0xEF, 0xC3, 0x6F, 0x3F, 0x33, 0x51, 0xD2, 0xCF, 0xD1, 0xBD, 0xF8, 0x6C, 0xEB, 0x3F, 0xB3, 
0x44, 0x42, 0x50, 0x79, 0x5D, 0xFA, 0x27, 0xBF, 0x09, 0xB1, 0x86, 0x99, 0xEE, 0x98, 0x7E, 0x85, 
0xEF, 0xC2, 0x6C, 0x61, 0xA6, 0x7B, 0xA6, 0x1F, 0xA1, 0x7B, 0xF0, 0x99, 0x49, 0xFF, 0x00, 0x9A, 
0x01, 0x48, 0xD4, 0x4A, 0xF0, 0xA7, 0x00, 0x73, 0x17, 0xCF, 0x09, 0xBC, 0xFC, 0xCD, 0x47, 0x4B, 
0x3F, 0x46, 0xF7, 0xE1, 0xB7, 0x9F, 0x99, 0xA8, 0xE9, 0x67, 0xE8, 0xDE, 0xFC, 0x36, 0xF3, 0xF3, 
0x35, 0x1D, 0x2C, 0xFD, 0x1B, 0xDF, 0x86, 0xCE, 0xB3, 0xFB, 0x34, 0x44, 0x25, 0x07, 0x95, 0xDF, 
0xA2, 0x7B, 0xF0, 0x9B, 0x18, 0x69, 0x9E, 0xE9, 0x87, 0xE8, 0x5E, 0xFC, 0x26, 0xC6, 0x1A, 0x67, 
0xBA, 0x61, 0xFA, 0x17, 0xBF, 0x09, 0x94, 0x9F, 0xF9, 0xA0, 0x14, 0x8D, 0x44, 0xAF, 0x0A, 0x70, 
0x07, 0x31, 0x7C, 0xF0, 0x9B, 0xCF, 0xCC, 0xD4, 0x74, 0xB3, 0xF4, 0x6F, 0x7E, 0x1B, 0x79, 0xF9, 
0x9A, 0x8E, 0x96, 0x7E, 0x8D, 0xEF, 0xC3, 0x6F, 0x3F, 0x33, 0x51, 0xD2, 0xCF, 0xD1, 0xBD, 0xF8, 
0x6C, 0xEB, 0x3F, 0xB3, 0x44, 0x42, 0x50, 0x79, 0x5D, 0xFA, 0x27, 0xBF, 0x09, 0xB1, 0x86, 0x99, 
0xEE, 0x98, 0x7E, 0x85, 0xEF, 0xC2, 0x69, 0x75, 0x11, 0x73, 0x8C, 0xCB, 0x59, 0x5B, 0x13, 0x70, 
0x5F, 0x86, 0x74, 0x7C, 0x8B, 0x3E, 0x2E, 0x82, 0x94, 0x18, 0xB8, 0x69, 0xA8, 0xA8, 0x98, 0xA6, 
0xA0, 0xFC, 0x60, 0xD7, 0x2B, 0xFA, 0x6D, 0x28, 0x7A, 0x89, 0x6F, 0x9A, 0x4C, 0x87, 0x3A, 0xBE, 
0xD0, 0xEC, 0x0B, 0xEA, 0x55, 0x29, 0x60, 0xD9, 0x02, 0xE2, 0x40, 0xCE, 0x35, 0x77, 0xB0, 0xB8, 
0x90, 0x33, 0x8D, 0x5D, 0xEC, 0x2E, 0x24, 0x0C, 0xE3, 0x57, 0x7B, 0x70, 0x9E, 0x4B, 0xC8, 0xA3, 
0x0E, 0x9E, 0x55, 0x3C, 0xDC, 0xFC, 0x5F, 0x7B, 0x03, 0xF1, 0x03, 0x37, 0xD6, 0xDC, 0xC0, 0xFC, 
0x40, 0xCD, 0xF5, 0xB7, 0x30, 0x3D, 0xE1, 0x80, 0xA6, 0x09, 0x50, 0x27, 0xE4, 0xE1, 0x53, 0x4D, 
0x14, 0xF1, 0x30, 0xB8, 0x90, 0x33, 0x8D, 0x5D, 0xEC, 0x2E, 0x24, 0x0C, 0xE3, 0x57, 0x7B, 0x0B, 
0x89, 0x03, 0x38, 0xD5, 0xDE, 0xD7, 0x56, 0xC3, 0x9E, 0x88, 0x32, 0x35, 0xF0, 0x08, 0x26, 0x76, 
0x20, 0x3D, 0xA4, 0x75, 0x3D, 0x47, 0x53, 0x00, 0x4B, 0xFD, 0xC5, 0xCA, 0xEE, 0x6F, 0x43, 0x2A, 
0xE5, 0x0B, 0xE9, 0x50, 0x30, 0xBB, 0x04, 0x2F, 0xC9, 0x8E, 0xA7, 0xA8, 0xEA, 0xAA, 0x5E, 0xEB, 
0x0B, 0x89, 0x03, 0x38, 0xD5, 0xDE, 0xC2, 0xE2, 0x40, 0xCE, 0x35, 0x77, 0xB0, 0xB8, 0x90, 0x33, 
0x8D, 0x5D, 0xED, 0xC2, 0x79, 0x2F, 0x22, 0x8C, 0x3A, 0x79, 0x54, 0xF3, 0x73, 0xF1, 0x7D, 0xEC, 
0x0F, 0xC4, 0x0C, 0xDF, 0x5B, 0x73, 0x03, 0xF1, 0x03, 0x37, 0xD6, 0xDC, 0xC0, 0xF7, 0x86, 0x02, 
0x98, 0x25, 0x40, 0x9F, 0x93, 0x85, 0x4D, 0x34, 0x53, 0xC4, 0xC2, 0xE2, 0x40, 0xCE, 0x35, 0x77, 
0xB0, 0xB8, 0x90, 0x33, 0x8D, 0x5D, 0xEC, 0x2E, 0x24, 0x0C, 0xE3, 0x57, 0x7E, 0x43, 0xE5, 0x68, 
0x58, 0x0B, 0xE8, 0xD7, 0xA5, 0x6C, 0x36, 0xE4, 0x4A, 0x18, 0x44, 0x32, 0x34, 0xEE, 0xB4, 0x3E, 
0x26, 0xE0, 0x93, 0xD3, 0xA2, 0xC4, 0x00, 0x3A, 0x2B, 0x14, 0x0C, 0x51, 0xE3, 0x61, 0x98, 0xC9, 
0xAC, 0xE8, 0xA9, 0x34, 0x85, 0xFB, 0xED, 0xE6, 0x2E, 0x6B, 0x3A, 0x28, 0x4D, 0x25, 0x7E, 0xFB, 
0x27, 0x31, 0x53, 0x54, 0x2A, 0x12, 0x99, 0x28, 0x4D, 0x25, 0x7E, 0xFB, 0x1A, 0x60, 0x26, 0x9B, 
0xA2, 0x69, 0xE9, 0x2F, 0x1E, 0x23, 0x1A, 0x60, 0x26, 0x9B, 0xA2, 0x69, 0xE9, 0x2F, 0x1E, 0x23, 
0x1A, 0x60, 0x26, 0x9B, 0xA2, 0x69, 0xE9, 0x2F, 0x1E, 0x23, 0x3D, 0xCC, 0x4C, 0xD4, 0x26, 0xA5, 
0x04, 0x92, 0x85, 0xA3, 0x04, 0x33, 0x95, 0xFB, 0xED, 0xE6, 0x2E, 0x6B, 0x3A, 0x28, 0x4D, 0x25, 
0x7E, 0xFB, 0x79, 0x8B, 0x9A, 0xCE, 0x8A, 0x13, 0x49, 0x5F, 0xBE, 0xC9, 0xCC, 0x54, 0xD5, 0x0A, 
0x84, 0xA6, 0x4A, 0x13, 0x49, 0x5F, 0xBE, 0xC6, 0x98, 0x09, 0xA6, 0xE8, 0x9A, 0x7A, 0x4B, 0xC7, 
0x88, 0xC6, 0x98, 0x09, 0xA6, 0xE8, 0x9A, 0x7A, 0x4B, 0xC7, 0x88, 0xC6, 0x98, 0x09, 0xA6, 0xE8, 
0x9A, 0x7A, 0x4B, 0xC7, 0x88, 0xCF, 0x73, 0x13, 0x35, 0x09, 0xA9, 0x41, 0x24, 0xA1, 0x68, 0xC1, 
0x0C, 0xE5, 0x7E, 0xFB, 0x79, 0x8B, 0x9A, 0xCE, 0x8A, 0x13, 0x49, 0x5F, 0xBE, 0xDE, 0x62, 0xE6, 
0xB3, 0xA2, 0x84, 0xD2, 0x57, 0xEF, 0xB2, 0x73, 0x15, 0x35, 0x42, 0xA1, 0x29, 0x92, 0x84, 0xD2, 
0x57, 0xEF, 0xB1, 0xA6, 0x02, 0x69, 0xBA, 0x26, 0x9E, 0x92, 0xF1, 0xE2, 0x31, 0xA6, 0x02, 0x69, 
0xBA, 0x26, 0x9E, 0x92, 0xF1, 0xE2, 0x31, 0xA6, 0x02, 0x69, 0xBA, 0x26, 0x9E, 0x92, 0xF1, 0xE2, 
0x33, 0xDC, 0xC4, 0xCD, 0x42, 0x6A, 0x50, 0x49, 0x28, 0x5A, 0x30, 0x43, 0x39, 0x5F, 0xBE, 0xDE, 
0x62, 0xE6, 0xB3, 0xA2, 0x84, 0xD2, 0x57, 0xEF, 0xB7, 0x98, 0xB9, 0xAC, 0xE8, 0xA1, 0x34, 0x95, 
0xFB, 0xED, 0x27, 0xE0, 0x10, 0x69, 0x36, 0xEC, 0x84, 0x3E, 0x0D, 0x0D, 0x41, 0xCD, 0xD4, 0xA7, 
0x01, 0x04, 0xD2, 0x2D, 0x14, 0x88, 0xFD, 0xA3, 0xEB, 0x11, 0xF5, 0x8E, 0x43, 0xE5, 0x68, 0x58, 
0x0B, 0xE8, 0xD7, 0xA5, 0x6C, 0x36, 0xE5, 0xBE, 0x56, 0x85, 0x80, 0xBE, 0x8D, 0x7A, 0x56, 0xC3, 
0x6E, 0x43, 0xE5, 0x68, 0x58, 0x0B, 0xE8, 0xD7, 0xA5, 0x6C, 0x36, 0xE4, 0x3E, 0x56, 0x85, 0x80, 
0xBE, 0x8D, 0x7A, 0x56, 0xC3, 0x6E, 0x43, 0xE5, 0x68, 0x58, 0x0B, 0xE8, 0xD7, 0xA5, 0x6C, 0x36, 
0xE4, 0x3E, 0x56, 0x85, 0x80, 0xBE, 0x8D, 0x7A, 0x56, 0xC3, 0x6E, 0x43, 0xE5, 0x68, 0x58, 0x0B, 
0xE8, 0xD7, 0xA5, 0x6C, 0x36, 0xE5, 0xBE, 0x56, 0x85, 0x80, 0xBE, 0x8D, 0x7A, 0x56, 0xC3, 0x6E, 
0x43, 0xE5, 0x68, 0x58, 0x0B, 0xE8, 0xD7, 0xA5, 0x6C, 0x36, 0xE4, 0x3E, 0x56, 0x85, 0x80, 0xBE, 
0x8D, 0x7A, 0x56, 0xC3, 0x6E, 0x43, 0xE5, 0x68, 0x58, 0x0B, 0xE8, 0xD7, 0xA5, 0x6C, 0x36, 0xE4, 
0x3E, 0x56, 0x85, 0x80, 0xBE, 0x8D, 0x7A, 0x56, 0xC3, 0x6E, 0x43, 0xE5, 0x68, 0x58, 0x0B, 0xE8, 
0xD7, 0xA5, 0x6C, 0x36, 0xE5, 0xB9, 0xD5, 0xF6, 0x87, 0x60, 0x5F, 0x52, 0xA9, 0x4B, 0x06, 0xC8, 
0x73, 0xAB, 0xED, 0x0E, 0xC0, 0xBE, 0xA5, 0x52, 0x96, 0x0D, 0x90, 0xE7, 0x57, 0xDA, 0x1D, 0x81, 
0x7D, 0x4A, 0xA5, 0x2C, 0x1B, 0x21, 0xCE, 0xAF, 0xB4, 0x3B, 0x02, 0xFA, 0x95, 0x4A, 0x58, 0x36, 
0x43, 0x9D, 0x5F, 0x68, 0x76, 0x05, 0xF5, 0x2A, 0x94, 0xB0, 0x6C, 0x87, 0x3A, 0xBE, 0xD0, 0xEC, 
0x0B, 0xEA, 0x55, 0x29, 0x60, 0xD9, 0x6E, 0x75, 0x7D, 0xA1, 0xD8, 0x17, 0xD4, 0xAA, 0x52, 0xC1, 
0xB2, 0x1C, 0xEA, 0xFB, 0x43, 0xB0, 0x2F, 0xA9, 0x54, 0xA5, 0x83, 0x64, 0x39, 0xD5, 0xF6, 0x87, 
0x60, 0x5F, 0x52, 0xA9, 0x4B, 0x06, 0xC8, 0x73, 0xAB, 0xED, 0x0E, 0xC0, 0xBE, 0xA5, 0x52, 0x96, 
0x0D, 0x90, 0xE7, 0x57, 0xDA, 0x1D, 0x81, 0x7D, 0x4A, 0xA5, 0x2C, 0x1B, 0x21, 0xCE, 0xAF, 0xB4, 
0x3B, 0x02, 0xFA, 0x95, 0x4A, 0x58, 0x36, 0x5B, 0x9D, 0x5F, 0x68, 0x76, 0x05, 0xF5, 0x2A, 0x94, 
0xB0, 0x6C, 0x87, 0x3A, 0xBE, 0xD0, 0xEC, 0x0B, 0xEA, 0x55, 0x29, 0x60, 0xD9, 0x0E, 0x75, 0x7D, 
0xA1, 0xD8, 0x17, 0xD4, 0xAA, 0x52, 0xC1, 0xB2, 0x1C, 0xEA, 0xFB, 0x43, 0xB0, 0x2F, 0xA9, 0x54, 
0xA5, 0x83, 0x64, 0x39, 0xD5, 0xF6, 0x87, 0x60, 0x5F, 0x52, 0xA9, 0x4B, 0x06, 0xC8, 0x73, 0xAB, 
0xED, 0x0E, 0xC0, 0xBE, 0xA5, 0x52, 0x96, 0x0D, 0x91, 0xFF, 0xD9};
char temp;

//128BYTE BOOLEAN-ARRAY to store binary text data
// bool string_Signal[1024] = {0, }; 
uint8_t string_Signal[550] = {0, };
uint16_t signal_length = 0;
char ber_test_signal = 0x1E;
uint16_t block_size = 0;

//for sending loop
int16_t stringIndex = 0;
uint8_t bitIndex = 0;
bool toggle = 0;
bool image_state = 0;
uint16_t image_index = 0;
uint16_t realtime_comm_delay = FREQ11 * 4;
byte Grayscale;
// File bmpImage;

//for image
uint16_t size;
uint16_t size_divider = 0;
uint16_t size_divider_n = 0;

// Define various ADC prescaler 
const unsigned char PS_16 = (1 << ADPS2); 
const unsigned char PS_32 = (1 << ADPS2) | (1 << ADPS0); 
const unsigned char PS_64 = (1 << ADPS2) | (1 << ADPS1); 
const unsigned char PS_128 = (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);

//symbol of start of transmission
//NOT USING FOR NOW
bool _symbol_SOT[8] = {1, 0, 0, 0, 0, 1, 1, 0}; // 6

bool _symbol_SOT_Control[8] = {1, 0, 0, 0, 1, 1, 1, 1}; // 5

// bool _symbol_Control_Forward[8]; // 8

// bool _symbol_Control_Backward[8]; // 9

// bool _symbol_Control_Rotate_Left[8]; // 10

// bool _symbol_Control_Rotate_Right[8]; // 11

bool _symbol_Control_ChangeSpeed[8]; // 12

bool _symbol_SOT_Image[8] = {1, 0, 0, 0, 0, 1, 1, 1}; //7

bool _symbol_EOL_Image[8] = {0, 0, 0, 0, 1, 0, 0, 0}; //8

//symbol of end of transmission
bool _symbol_EOT[8] = {0, 0, 0, 0, 0, 1, 0, 0}; // 4

//FOR BENCHMARKING=============================
// unsigned long _time_started;
// unsigned long _time_ended;
// char buffer[100];
//FOR BENCHMARKING=============================

void setup() {
  pinModeFast(LED, OUTPUT);
  // if (!SD.begin(10)) {
  //   Serial.println("initialization failed!");
  //   while (1);
  // }
  // File bmpImage = SD.open("picture.bmp",FILE_READ);
  // size = bmpImage.size();
  //For Debuging=========================================
  if(debug || ber_test){
    Serial.begin(2000000);
    Serial.print("start TRANSMISSION \n");
  }
  if(debug && ber_test){
    Serial.println("Debug & BER can't enabled at the same time");
    while(1);
  }
  if(ber_test){
    buffer_ber_test();
  }else if(send_image){
    buffer_image();
  }else{
    buffer_text();
  }
  //For Debuging=========================================
  ADCSRA &= ~PS_128;
  ADCSRA |= PS_16;
  digitalWriteFast(LED, 1);
  delay(SYNCBYTE);
}

void loop() {
  // if(stringIndex == -1){
  //   _exception_comm_started();
  //   stringIndex += 1;
  // }
  if(bitRead(string_Signal[stringIndex], bitIndex)){
    if(bitRead(string_Signal[stringIndex], bitIndex + 1)){
      write_11();
    }else{
      write_10();
    }
  }else{
    if(bitRead(string_Signal[stringIndex], bitIndex + 1)){
      write_01();
    }else{
      write_00();
    }
  }
  bitIndex += 2;
  if(bitIndex == 8){
    bitIndex = 0;
    stringIndex += 1;
  }
  if(stringIndex >= signal_length - 1) {
      _exception_comm_ended();
      _exception_comm_ended();
      if(send_image){
        buffer_image();
      }
      if(debug && send_image){
        Serial.println("512 Byte sent " + String(image_index) + " " + String(size_divider));
      }
      stringIndex = 0;
      //FOR BENCHMARKING===========================
      // _time_ended = millis();
      // Serial.print("\n");
      // Serial.print((strlen(inputString) + SYNCBYTE + 1) * 8);
      // Serial.print("\n");
      // Serial.print(String((_time_ended) - (_time_started)));
      //FOR BENCHMARKING===========================
      // delay(1);
      //FOR BENCHMARKING===========================
      // _time_started = millis();
      //FOR BENCHMARKING===========================
  }
}

void buffer_ber_test(){
  for (int i = 0; i < strlen(ber_string) + SYNCBYTE + 1; i++) {
    if(i == SYNCBYTE - 1){
      for (int j = 0; j < 8; j++) {
        if(_symbol_SOT[7 - j]){
          bitSet(string_Signal[i], 7-j);
        }else{
          bitClear(string_Signal[i], 7-j);
        }
      }
    } else if(i < SYNCBYTE - 1){
      for (int j = 0; j < 8; j++) {
          bitClear(string_Signal[i], 7-j);
      }
    } else if(i == (strlen(ber_string) + SYNCBYTE)) {
      for (int j = 0; j < 8; j++) {
        if(_symbol_EOT[7 - j]){
          bitSet(string_Signal[i], 7-j);
        }else{
          bitClear(string_Signal[i], 7-j);
        }
      }
    } else {
      for (int j = 0; j < 8; j++){
        if((ber_string[i - SYNCBYTE] & (0x01 << j)) != 0){
          bitSet(string_Signal[i], 7-j);
        }else{
          bitClear(string_Signal[i], 7-j);
        }
      }
    }
  }
  signal_length = (strlen(ber_string) + SYNCBYTE + 1);
}

void buffer_text(){
  for (int i = 0; i < strlen(inputString) + SYNCBYTE + 1; i++) {
    if(i == SYNCBYTE - 1){
      for (int j = 0; j < 8; j++) {
        if(_symbol_SOT[7 - j]){
          bitSet(string_Signal[i], 7-j);
        }else{
          bitClear(string_Signal[i], 7-j);
        }
      }
    } else if(i < SYNCBYTE - 1){
      for (int j = 0; j < 8; j++) {
          bitClear(string_Signal[i], 7-j);
      }
    } else if(i == (strlen(inputString) + SYNCBYTE)) {
      for (int j = 0; j < 8; j++) {
        if(_symbol_EOT[7 - j]){
          bitSet(string_Signal[i], 7-j);
        }else{
          bitClear(string_Signal[i], 7-j);
        }
      }
    } else {
      for (int j = 0; j < 8; j++){
        if((inputString[i - SYNCBYTE] & (0x01 << j)) != 0){
          bitSet(string_Signal[i], 7-j);
        }else{
          bitClear(string_Signal[i], 7-j);
        }
      }
    }
  }
  signal_length = (strlen(inputString) + SYNCBYTE + 1);
}

void buffer_control(uint8_t control_signal, uint8_t is_it_speed){
  if(is_it_speed == 0){
    for (int i = 0; i < 1 + SYNCBYTE + 1; i++) {
      if(i == SYNCBYTE - 1){
        for (int j = 0; j < 8; j++) {
          if(_symbol_SOT_Control[7 - j]){
            bitSet(string_Signal[i], 7-j);
          }else{
            bitClear(string_Signal[i], 7-j);
          }
        }
      }
      else if(i < SYNCBYTE - 1){
        for (int j = 0; j < 8; j++) {
          bitClear(string_Signal[i], 7-j);
        }
      } else if(i == (1 + SYNCBYTE)) {
        for (int j = 0; j < 8; j++) {
          if(_symbol_EOT[7 - j]){
            bitSet(string_Signal[i], 7-j);
          }else{
            bitClear(string_Signal[i], 7-j);
          }
        }
      } else {
        for (int j = 0; j < 8; j++){
          if((control_signal & (0x01 << j)) != 0){
            bitSet(string_Signal[i], 7-j);
          }else{
            bitClear(string_Signal[i], 7-j);
          }
        }
      }
    }
    signal_length = (SYNCBYTE + 2);  
  }else{
    for (int i = 0; i < 2 + SYNCBYTE + 1; i++) {
      if(i == SYNCBYTE - 1){
        for (int j = 0; j < 8; j++) {
          if(_symbol_SOT_Control[7 - j]){
            bitSet(string_Signal[i], 7-j);
          }else{
            bitClear(string_Signal[i], 7-j);
          }
        }
      }
      else if(i < SYNCBYTE - 1){
        for (int j = 0; j < 8; j++) {
          bitClear(string_Signal[i], 7-j);
        }
      } else if(i == (1 + SYNCBYTE)) {
        for (int j = 0; j < 8; j++) {
          if(_symbol_EOT[7 - j]){
            bitSet(string_Signal[i], 7-j);
          }else{
            bitClear(string_Signal[i], 7-j);
          }
        }
      } else {
        for (int j = 0; j < 8; j++){
          if((control_signal & (0x01 << j)) != 0){
            bitSet(string_Signal[i], 7-j);
          }else{
            bitClear(string_Signal[i], 7-j);
          }
        }
        i += 1;
        for (int j = 0; j < 8; j++){
          if((is_it_speed & (0x01 << j)) != 0){
            bitSet(string_Signal[i], 7-j);
          }else{
            bitClear(string_Signal[i], 7-j);
          }
        }
      }
    }
  signal_length = (SYNCBYTE + 3);  
  }
}

void write_00(){
  for(int i = 0; i < DURATION; i++){
    delayMicroseconds(FREQ00);
    if(toggle){
      digitalWriteFast(LED, 1);
    }else{
      digitalWriteFast(LED, 0);
    }
    toggle = !toggle;
  }
}

void write_01(){
  for(int i = 0; i < DURATION; i++){
    delayMicroseconds(FREQ01);
    if(toggle){
      digitalWriteFast(LED, 1);
    }else{
      digitalWriteFast(LED, 0);
    }
    toggle = !toggle;
  }
}

void write_10(){
  for(int i = 0; i < DURATION; i++){
    delayMicroseconds(FREQ10);
    if(toggle){
      digitalWriteFast(LED, 1);
    }else{
      digitalWriteFast(LED, 0);
    }
    toggle = !toggle;
  }
}

void write_11(){
  for(int i = 0; i < DURATION; i++){
    delayMicroseconds(FREQ11);
    if(toggle){
      digitalWriteFast(LED, 1);
    }else{
      digitalWriteFast(LED, 0);
    }
    toggle = !toggle;
  }
}

void write_sync(){
  for(int i = 0; i < DURATION; i++){
    delayMicroseconds(FREQ11);
    if(toggle){
      digitalWriteFast(LED, 1);
    }else{
      digitalWriteFast(LED, 0);
    }
    toggle = !toggle;
  }
}

void _exception_comm_ended(){
  for(int i = 0; i < DURATION; i++){
    delayMicroseconds(FREQ_ABORT);
    if(toggle){
      digitalWriteFast(LED, 1);
    }else{
      digitalWriteFast(LED, 0);
    }
    toggle = !toggle;
  }
}

// void _exception_comm_started(){
//   for(int i = 0; i < DURATION; i++){
//     delayMicroseconds(FREQ_START);
//     if(toggle){
//       digitalWriteFast(LED, 1);
//     }else{
//       digitalWriteFast(LED, 0);
//     }
//     toggle = !toggle;
//   }
// }

void buffer_image(){
  if(!image_state){
    size = sizeof(image);
    image_index = 0;
    image_state = 1;
  }

  // bmpImage.seek( );
  if(size > 512){
    size_divider = size / 512 + 1;
    size_divider_n = size % 512;
  }
  
  if(size_divider == image_index+1){
    block_size = size_divider_n;
    image_state = 0;
  }else{
    block_size = 512;
  }

  for (uint16_t i = 0; i < block_size + SYNCBYTE + 3; i++) {
    if(i == SYNCBYTE - 1){
      for (int j = 0; j < 8; j++) {
        if(_symbol_SOT_Image[7 - j]){
          bitSet(string_Signal[i], 7-j);
        }else{
          bitClear(string_Signal[i], 7-j);
        }
      }
    } else if(i == SYNCBYTE){
      for (int j = 0; j < 8; j++) {
        if(bitRead(uint8_t(size_divider), j)){
          bitSet(string_Signal[i], 7-j);
        }else{
          bitClear(string_Signal[i], 7-j);
        }
      }
    }else if(i == SYNCBYTE + 1){
      for (int j = 0; j < 8; j++) {
        if(bitRead(uint8_t(image_index + 1), j)){
          bitSet(string_Signal[i], 7-j);
        }else{
          bitClear(string_Signal[i], 7-j);
        }
      }
    } else if(i < SYNCBYTE - 1){
      for (int j = 0; j < 8; j++) {
          bitClear(string_Signal[i], 7-j);
      }
    } else if(i == (512 + SYNCBYTE + 2)){
      for (int j = 0; j < 8; j++) {
        if(_symbol_EOT[7 - j]){
          bitSet(string_Signal[i], 7-j);
        }else{
          bitClear(string_Signal[i], 7-j);
        }
      }
    } else {
      for (int j = 0; j < 8; j++) {
        temp = pgm_read_byte_near(image + (image_index * 512) + (i - SYNCBYTE - 2));
        if(bitRead(temp, j)){
          bitSet(string_Signal[i], 7-j);
        }else{
          bitClear(string_Signal[i], 7-j);
        }
      }
    }
  }
  image_index += 1;
  Serial.println(String(block_size + SYNCBYTE + 3) + " " + String(string_Signal[1]) + " " + String(string_Signal[2]) + " " + String(string_Signal[3]) + " " + String(string_Signal[4]) + " " + String(string_Signal[5]));
  signal_length = (block_size + SYNCBYTE + 3);
}
